{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport defaults from 'lodash/defaults';\nimport { Helpers, VictoryLabel } from 'victory-core';\nimport { ChartLabel } from '../ChartLabel';\nimport { ChartLegendTooltipStyles } from '../ChartTheme';\nexport const ChartLegendTooltipLabel = _a => {\n  var {\n    dx = 0,\n    index = 0,\n    legendData,\n    legendLabelComponent = React.createElement(ChartLabel, null),\n    style,\n    text,\n    textAnchor = 'end',\n    x,\n    y\n  } = _a,\n      // destructure last\n  rest = __rest(_a, [\"dx\", \"index\", \"legendData\", \"legendLabelComponent\", \"style\", \"text\", \"textAnchor\", \"x\", \"y\"]);\n\n  const getStyle = styles => {\n    const applyDefaultStyle = customStyle => defaults(Object.assign({}, customStyle), {\n      fill: ChartLegendTooltipStyles.label.fill\n    });\n\n    return Array.isArray(styles) ? styles.map(applyDefaultStyle) : applyDefaultStyle(styles);\n  };\n\n  const getLegendLabelComponent = () => {\n    const label = legendData && legendData.length ? legendData[index].name : undefined;\n    return React.cloneElement(legendLabelComponent, {\n      style: getStyle({}),\n      text: label,\n      textAnchor: 'start',\n      x,\n      y\n    });\n  };\n\n  const getValueLabelComponent = () => {\n    const _x = x + Helpers.evaluateProp(dx);\n\n    return React.createElement(ChartLabel, Object.assign({\n      style: getStyle(style),\n      text: text,\n      textAnchor: textAnchor,\n      x: _x,\n      y: y\n    }, rest));\n  };\n\n  const legendLabel = getLegendLabelComponent();\n  const valueLabel = getValueLabelComponent();\n  return React.createElement(React.Fragment, null, legendLabel, valueLabel);\n};\nChartLegendTooltipLabel.displayName = 'ChartLegendTooltipLabel'; // Note: VictoryLabel.role must be hoisted\n\nhoistNonReactStatics(ChartLegendTooltipLabel, VictoryLabel);","map":{"version":3,"sources":["../../../../src/components/ChartLegendTooltip/ChartLegendTooltipLabel.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,OAAO,oBAAP,MAAiC,yBAAjC;AACA,OAAO,QAAP,MAAqB,iBAArB;AACA,SACE,OADF,EAOE,YAPF,QASO,cATP;AAUA,SAAS,UAAT,QAA2B,eAA3B;AACA,SAAS,wBAAT,QAAyC,eAAzC;AAgNA,OAAO,MAAM,uBAAuB,GAAoD,EAAD,IAa3D;MAb4D;AACtF,IAAA,EAAE,GAAG,CADiF;AAEtF,IAAA,KAAK,GAAG,CAF8E;AAGtF,IAAA,UAHsF;AAItF,IAAA,oBAAoB,GAAG,KAAA,CAAA,aAAA,CAAC,UAAD,EAAW,IAAX,CAJ+D;AAKtF,IAAA,KALsF;AAMtF,IAAA,IANsF;AAOtF,IAAA,UAAU,GAAG,KAPyE;AAQtF,IAAA,CARsF;AAStF,IAAA;AATsF,MASrF,E;MAED;AACG,EAAA,IAAI,GAAA,MAAA,CAAA,EAAA,EAZ+E,CAAA,IAAA,EAAA,OAAA,EAAA,YAAA,EAAA,sBAAA,EAAA,OAAA,EAAA,MAAA,EAAA,YAAA,EAAA,GAAA,EAAA,GAAA,CAY/E,C;;AAEP,QAAM,QAAQ,GAAI,MAAD,IAAgB;AAC/B,UAAM,iBAAiB,GAAI,WAAD,IACxB,QAAQ,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAED,WAFC,CAAA,EAIN;AACE,MAAA,IAAI,EAAE,wBAAwB,CAAC,KAAzB,CAA+B;AADvC,KAJM,CADV;;AASA,WAAO,KAAK,CAAC,OAAN,CAAc,MAAd,IAAwB,MAAM,CAAC,GAAP,CAAW,iBAAX,CAAxB,GAAwD,iBAAiB,CAAC,MAAD,CAAhF;AACD,GAXD;;AAaA,QAAM,uBAAuB,GAAG,MAAK;AACnC,UAAM,KAAK,GAAG,UAAU,IAAI,UAAU,CAAC,MAAzB,GAAkC,UAAU,CAAC,KAAD,CAAV,CAAyB,IAA3D,GAAkE,SAAhF;AAEA,WAAO,KAAK,CAAC,YAAN,CAAmB,oBAAnB,EAAyC;AAC9C,MAAA,KAAK,EAAE,QAAQ,CAAC,EAAD,CAD+B;AAE9C,MAAA,IAAI,EAAE,KAFwC;AAG9C,MAAA,UAAU,EAAE,OAHkC;AAI9C,MAAA,CAJ8C;AAK9C,MAAA;AAL8C,KAAzC,CAAP;AAOD,GAVD;;AAYA,QAAM,sBAAsB,GAAG,MAAK;AAClC,UAAM,EAAE,GAAG,CAAC,GAAG,OAAO,CAAC,YAAR,CAAqB,EAArB,CAAf;;AACA,WAAO,KAAA,CAAA,aAAA,CAAC,UAAD,EAAW,MAAA,CAAA,MAAA,CAAA;AAAC,MAAA,KAAK,EAAE,QAAQ,CAAC,KAAD,CAAhB;AAAyB,MAAA,IAAI,EAAE,IAA/B;AAAqC,MAAA,UAAU,EAAE,UAAjD;AAA6D,MAAA,CAAC,EAAE,EAAhE;AAAoE,MAAA,CAAC,EAAE;AAAvE,KAAA,EAA8E,IAA9E,CAAX,CAAP;AACD,GAHD;;AAKA,QAAM,WAAW,GAAG,uBAAuB,EAA3C;AACA,QAAM,UAAU,GAAG,sBAAsB,EAAzC;AACA,SACE,KAAA,CAAA,aAAA,CAAC,KAAK,CAAC,QAAP,EAAe,IAAf,EACG,WADH,EAEG,UAFH,CADF;AAMD,CApDM;AAqDP,uBAAuB,CAAC,WAAxB,GAAsC,yBAAtC,C,CAEA;;AACA,oBAAoB,CAAC,uBAAD,EAA0B,YAA1B,CAApB","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport defaults from 'lodash/defaults';\nimport { Helpers, VictoryLabel } from 'victory-core';\nimport { ChartLabel } from '../ChartLabel';\nimport { ChartLegendTooltipStyles } from '../ChartTheme';\nexport const ChartLegendTooltipLabel = (_a) => {\n    var { dx = 0, index = 0, legendData, legendLabelComponent = React.createElement(ChartLabel, null), style, text, textAnchor = 'end', x, y } = _a, \n    // destructure last\n    rest = __rest(_a, [\"dx\", \"index\", \"legendData\", \"legendLabelComponent\", \"style\", \"text\", \"textAnchor\", \"x\", \"y\"]);\n    const getStyle = (styles) => {\n        const applyDefaultStyle = (customStyle) => defaults(Object.assign({}, customStyle), {\n            fill: ChartLegendTooltipStyles.label.fill\n        });\n        return Array.isArray(styles) ? styles.map(applyDefaultStyle) : applyDefaultStyle(styles);\n    };\n    const getLegendLabelComponent = () => {\n        const label = legendData && legendData.length ? legendData[index].name : undefined;\n        return React.cloneElement(legendLabelComponent, {\n            style: getStyle({}),\n            text: label,\n            textAnchor: 'start',\n            x,\n            y\n        });\n    };\n    const getValueLabelComponent = () => {\n        const _x = x + Helpers.evaluateProp(dx);\n        return React.createElement(ChartLabel, Object.assign({ style: getStyle(style), text: text, textAnchor: textAnchor, x: _x, y: y }, rest));\n    };\n    const legendLabel = getLegendLabelComponent();\n    const valueLabel = getValueLabelComponent();\n    return (React.createElement(React.Fragment, null,\n        legendLabel,\n        valueLabel));\n};\nChartLegendTooltipLabel.displayName = 'ChartLegendTooltipLabel';\n// Note: VictoryLabel.role must be hoisted\nhoistNonReactStatics(ChartLegendTooltipLabel, VictoryLabel);\n//# sourceMappingURL=ChartLegendTooltipLabel.js.map"]},"metadata":{},"sourceType":"module"}