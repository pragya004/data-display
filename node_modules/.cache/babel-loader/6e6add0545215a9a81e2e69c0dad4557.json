{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pk\\\\Desktop\\\\interview_practice\\\\eagleowl\\\\src\\\\Components\\\\AllRecipes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport NothingToDisplay from './NothingToDisplay';\nimport { Checkbox, withStyles, makeStyles, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, TableSortLabel } from '@material-ui/core';\nimport moment from 'moment';\nimport Chip from '@material-ui/core/Chip';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  headingColor: {\n    backgroundColor: '#94b3f6'\n  },\n  tableRowHover: {\n    \"&:hover\": {\n      backgroundColor: \"#dad9df !important\"\n    }\n  }\n}));\nconst StyledTableRow = withStyles(theme => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: '#f4f3f9'\n    }\n  }\n}))(TableRow); // createSortHandler\n\nexport default function AllRecipes() {\n  _s();\n\n  const classes = useStyles();\n  const [isChecked, setIsChecked] = useState();\n  const [isItemSelected, setIsItemSelected] = useState(false);\n  const [disabledData, setDisabledData] = useState([]);\n  const liRefs = [];\n  const [recipeData, setRecipeData] = useState([]);\n  const isMounted = useRef(false);\n\n  async function getAllRecipes() {\n    try {\n      const data = await fetch('https://beta.eagleowl.in/api/v1/mock/organization/18/outlet/18/recipe/recipes/?page=1');\n      const json = await data.json();\n      setRecipeData(json.results);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  useEffect(() => {\n    getAllRecipes();\n  }, []);\n  useEffect(() => {\n    if (isMounted.current) {\n      console.log(recipeData);\n    } else {\n      isMounted.current = true;\n    }\n  }, [recipeData]);\n\n  const handleChange = e => {\n    setIsItemSelected(e.target.checked);\n  };\n\n  const handleRowChange = event => {\n    setIsItemSelected(event.target.checked);\n  };\n\n  const [orderDirection, setOrderDirection] = useState('asc');\n  const [valueToOrderBy, setValueToOrderBy] = usesState('name');\n\n  const handleRequestSort = (e, property) => {\n    const isAscending = valueToOrderBy === property && orderDirection === \"asc\";\n    setValueToOrderBy(property);\n    setOrderDirection(isAscending ? 'desc' : 'asc');\n  };\n\n  const createSortHandler = property => e => {\n    handleRequestSort(e, property);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isMounted.current ? recipeData.length === 0 ? /*#__PURE__*/_jsxDEV(NothingToDisplay, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 65\n    }, this) : /*#__PURE__*/_jsxDEV(TableContainer, {\n      className: \"rounded-0\",\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        \"aria-label\": \"all-recipes\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            className: classes.headingColor,\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              className: \"selectCheckbox\",\n              padding: \"checkbox\",\n              children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                onChange: handleRowChange,\n                color: \"primary\",\n                inputProps: {\n                  'aria-label': 'secondary checkbox'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n                active: valueToOrderBy === \"name\",\n                direction: valueToOrderBy === \"name\" ? orderDirection : 'asc',\n                onClick: createSortHandler(\"name\"),\n                children: \"NAME\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 41\n              }, this)\n            }, \"name\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n                active: valueToOrderBy === \"lastUpdated\",\n                direction: valueToOrderBy === \"lastUpdated\" ? orderDirection : 'asc',\n                onClick: createSortHandler(\"lastUpdated\"),\n                children: \"LAST UPDATED\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 41\n              }, this)\n            }, \"lastUpdated\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n                active: valueToOrderBy === \"cogs\",\n                direction: valueToOrderBy === \"cogs\" ? orderDirection : 'asc',\n                children: [\"onClick = \", createSortHandler(\"cogs\"), \"COGS\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 41\n              }, this)\n            }, \"cogs\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n                active: valueToOrderBy === \"costPrice\",\n                direction: valueToOrderBy === \"costPrice\" ? orderDirection : 'asc',\n                children: [\"onClick = \", createSortHandler(\"costPrice\"), \"COST PRICE\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 41\n              }, this)\n            }, \"costPrice\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n                active: valueToOrderBy === \"salePrice\",\n                direction: valueToOrderBy === \"salePrice\" ? orderDirection : 'asc',\n                children: [\"onClick = \", createSortHandler(\"salePrice\"), \"SALE PRICE\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 41\n              }, this)\n            }, \"salePrice\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n                active: valueToOrderBy === \"grossMargin\",\n                direction: valueToOrderBy === \"grossMargin\" ? orderDirection : 'asc',\n                children: [\"onClick = \", createSortHandler(\"grossMargin\"), \"GROSS MARGIN\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 41\n              }, this)\n            }, \"grossMargin\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              children: \"TABS / ACTIONS\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: recipeData.map((recipe, idx) => /*#__PURE__*/_jsxDEV(StyledTableRow, {\n            hover: true,\n            className: classes.tableRowHover,\n            onClick: handleChange,\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              className: \"selectCheckbox\",\n              padding: \"checkbox\",\n              children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                ref: ref => liRefs[idx] = ref,\n                onClick: handleChange,\n                color: \"primary\",\n                inputProps: {\n                  'aria-label': 'secondary checkbox'\n                },\n                className: \"heyCheckbox\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 53\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 49\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              children: recipe.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 49\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              children: moment(recipe.last_updated.date).format(\"MMM Do,YYYY\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 49\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: [recipe.cogs, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 49\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: Math.round(recipe.cost_price)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 49\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: Math.round(recipe.sale_price)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 49\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: [Math.round(recipe.gross_margin), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 49\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              display: \"flex\",\n              flexDirection: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(Chip, {\n                label: \"Indian\",\n                className: \"mr-2\",\n                style: {\n                  backgroundColor: \"#f4f4d0\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 110\n              }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                label: \"Italian\",\n                style: {\n                  backgroundColor: \"#f8f4ab\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 185\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 49\n            }, this)]\n          }, recipe.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 45\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }, this) : null\n  }, void 0, false);\n}\n\n_s(AllRecipes, \"9W+hZyF89zqhvHCfuRB7qPxVuXk=\", false, function () {\n  return [useStyles];\n});\n\n_c = AllRecipes;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllRecipes\");","map":{"version":3,"sources":["C:/Users/pk/Desktop/interview_practice/eagleowl/src/Components/AllRecipes.js"],"names":["React","useState","useEffect","useRef","NothingToDisplay","Checkbox","withStyles","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","TableSortLabel","moment","Chip","useStyles","theme","headingColor","backgroundColor","tableRowHover","StyledTableRow","root","AllRecipes","classes","isChecked","setIsChecked","isItemSelected","setIsItemSelected","disabledData","setDisabledData","liRefs","recipeData","setRecipeData","isMounted","getAllRecipes","data","fetch","json","results","err","console","log","current","handleChange","e","target","checked","handleRowChange","event","orderDirection","setOrderDirection","valueToOrderBy","setValueToOrderBy","usesState","handleRequestSort","property","isAscending","createSortHandler","length","map","recipe","idx","ref","name","last_updated","date","format","cogs","Math","round","cost_price","sale_price","gross_margin","id"],"mappings":"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","sourcesContent":["import React, {useState , useEffect, useRef} from 'react'\r\nimport NothingToDisplay from './NothingToDisplay'\r\nimport { Checkbox, withStyles, makeStyles, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, TableSortLabel} from '@material-ui/core'\r\nimport moment from 'moment'\r\nimport Chip from '@material-ui/core/Chip';\r\n\r\nconst useStyles = makeStyles(theme => (\r\n    \r\n    {\r\n            headingColor : {\r\n                backgroundColor :'#94b3f6',\r\n            },\r\n            tableRowHover: {\r\n                \"&:hover\": {\r\n                        backgroundColor: \"#dad9df !important\",\r\n                    }\r\n            }\r\n    }));\r\n\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n      '&:nth-of-type(odd)': {\r\n        backgroundColor: '#f4f3f9',\r\n      },\r\n    },\r\n  }))(TableRow);\r\n\r\n\r\n// createSortHandler\r\n\r\n\r\n\r\n\r\nexport default function AllRecipes() {\r\n\r\n    const classes = useStyles()\r\n    const [isChecked, setIsChecked] = useState()\r\n    const [isItemSelected , setIsItemSelected] = useState(false)\r\n    const [disabledData, setDisabledData] = useState([])\r\n    const liRefs = []\r\n\r\n\r\n    const [recipeData, setRecipeData] = useState([])\r\n    const isMounted = useRef(false)\r\n\r\n    async function getAllRecipes(){\r\n        try{\r\n            const data = await fetch('https://beta.eagleowl.in/api/v1/mock/organization/18/outlet/18/recipe/recipes/?page=1')\r\n            const json = await data.json()\r\n            setRecipeData(json.results)\r\n        }\r\n        catch(err){\r\n            console.log(err)\r\n        }\r\n        \r\n    }\r\n    \r\n    useEffect(()=>{\r\n        getAllRecipes()\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        if(isMounted.current){\r\n            console.log(recipeData)\r\n        }\r\n        else{\r\n            isMounted.current = true\r\n        }\r\n    },[recipeData])\r\n\r\n    \r\n    const handleChange = (e) => {\r\n        setIsItemSelected(e.target.checked);\r\n      };\r\n\r\n    const handleRowChange = (event) => {\r\n\r\n        setIsItemSelected(event.target.checked);\r\n\r\n    } \r\n\r\n    const [orderDirection, setOrderDirection] = useState('asc')\r\n    const [valueToOrderBy, setValueToOrderBy] = usesState('name')\r\n\r\n    const handleRequestSort = (e,property) => {\r\n        const isAscending = (valueToOrderBy === property && orderDirection === \"asc\")\r\n        setValueToOrderBy(property)\r\n        setOrderDirection(isAscending ? 'desc' : 'asc')\r\n    }\r\n\r\n    const createSortHandler = (property) => (e) => {\r\n        handleRequestSort(e,property)\r\n    }\r\n\r\n    return(\r\n        <>\r\n            {\r\n                (isMounted.current ? (recipeData.length === 0 ? <NothingToDisplay /> :\r\n                    <TableContainer className=\"rounded-0\" component = {Paper}>\r\n                        <Table aria-label = \"all-recipes\">\r\n                            <TableHead>\r\n                                <TableRow className = {classes.headingColor}>\r\n                                    <TableCell className=\"selectCheckbox\" padding=\"checkbox\">\r\n                                    <Checkbox\r\n                                        onChange={handleRowChange}\r\n                                        color=\"primary\"\r\n                                        inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                                    />\r\n                                    </TableCell>\r\n                                    <TableCell key=\"name\" align=\"left\">\r\n                                        <TableSortLabel \r\n                                            active={valueToOrderBy === \"name\"}\r\n                                            direction={valueToOrderBy === \"name\" ? orderDirection: 'asc'}\r\n                                            onClick = {createSortHandler(\"name\")}\r\n                                        >\r\n                                            NAME\r\n                                        </TableSortLabel>\r\n                                    </TableCell>\r\n                                    <TableCell key=\"lastUpdated\" align=\"left\">\r\n                                        <TableSortLabel \r\n                                            active={valueToOrderBy === \"lastUpdated\"}\r\n                                            direction={valueToOrderBy === \"lastUpdated\" ? orderDirection: 'asc'}\r\n                                            onClick = {createSortHandler(\"lastUpdated\")}\r\n                                        >\r\n                                            LAST UPDATED\r\n                                        </TableSortLabel>\r\n                                    </TableCell>\r\n                                    <TableCell key=\"cogs\" align=\"left\">\r\n                                        <TableSortLabel \r\n                                            active={valueToOrderBy === \"cogs\"} \r\n                                            direction={valueToOrderBy === \"cogs\" ? orderDirection: 'asc'}>\r\n                                            onClick = {createSortHandler(\"cogs\")}\r\n                                            COGS\r\n                                        </TableSortLabel>\r\n                                    </TableCell>\r\n                                    <TableCell key=\"costPrice\" align=\"left\">\r\n                                        <TableSortLabel \r\n                                            active={valueToOrderBy === \"costPrice\"} \r\n                                            direction={valueToOrderBy === \"costPrice\" ? orderDirection: 'asc'}>\r\n                                            onClick = {createSortHandler(\"costPrice\")}\r\n                                            COST PRICE\r\n                                        </TableSortLabel>\r\n                                    </TableCell>\r\n                                    <TableCell key=\"salePrice\" align=\"left\">\r\n                                        <TableSortLabel \r\n                                            active={valueToOrderBy === \"salePrice\"} \r\n                                            direction={valueToOrderBy === \"salePrice\" ? orderDirection: 'asc'}>\r\n                                            onClick = {createSortHandler(\"salePrice\")}\r\n                                            SALE PRICE\r\n                                        </TableSortLabel>\r\n                                    </TableCell>\r\n                                    <TableCell key=\"grossMargin\" align=\"left\">\r\n                                        <TableSortLabel \r\n                                            active={valueToOrderBy === \"grossMargin\"} \r\n                                            direction={valueToOrderBy === \"grossMargin\" ? orderDirection: 'asc'}>\r\n                                            onClick = {createSortHandler(\"grossMargin\")}\r\n                                            GROSS MARGIN\r\n                                        </TableSortLabel>\r\n                                    </TableCell>\r\n                                    <TableCell align=\"left\">TABS / ACTIONS</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {\r\n                                    recipeData.map( (recipe,idx) => (\r\n\r\n                                            <StyledTableRow key={recipe.id} hover className={classes.tableRowHover} onClick={handleChange}>\r\n                                                \r\n                                                <TableCell className=\"selectCheckbox\" padding=\"checkbox\">\r\n                                                    <Checkbox\r\n                                                        ref = {ref => (liRefs[idx] = ref)}\r\n                                                        onClick = {handleChange}\r\n                                                        color=\"primary\"\r\n                                                        inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                                                        className = \"heyCheckbox\"\r\n                                                    />\r\n                                                </TableCell>\r\n                                                <TableCell align=\"left\">{recipe.name}</TableCell>\r\n                                                <TableCell align=\"left\">{moment(recipe.last_updated.date).format(\"MMM Do,YYYY\")}</TableCell>\r\n                                                <TableCell align=\"right\">{recipe.cogs}%</TableCell>\r\n                                                <TableCell align=\"right\">{Math.round(recipe.cost_price)}</TableCell>\r\n                                                <TableCell align=\"right\">{Math.round(recipe.sale_price)}</TableCell>\r\n                                                <TableCell align=\"right\">{Math.round(recipe.gross_margin)}%</TableCell>\r\n                                                <TableCell  align=\"left\" display=\"flex\"  flexDirection=\"row\"><Chip label=\"Indian\" className=\"mr-2\" style={{backgroundColor:\"#f4f4d0\"}}/><Chip label=\"Italian\" style={{backgroundColor:\"#f8f4ab\"}}/></TableCell>\r\n                                            </StyledTableRow>\r\n                                    ))\r\n                                }\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer> \r\n                ) : null)\r\n            }\r\n        </>\r\n\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}