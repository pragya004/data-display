{"ast":null,"code":"import * as React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { VictoryBar } from 'victory-bar';\nimport { ChartContainer } from '../ChartContainer';\nimport { getBulletComparativeWarningMeasureTheme } from '../ChartUtils';\nimport { ChartBulletComparativeMeasure } from './ChartBulletComparativeMeasure';\nexport const ChartBulletComparativeWarningMeasure = ({\n  allowTooltip = true,\n  ariaDesc,\n  ariaTitle,\n  barWidth,\n  constrainToVisibleArea = false,\n  data,\n  domain,\n  horizontal = true,\n  labelComponent,\n  labels,\n  measureComponent = React.createElement(ChartBulletComparativeMeasure, null),\n  padding,\n  standalone = true,\n  themeColor,\n  themeVariant,\n  y,\n  // destructure last\n  theme = getBulletComparativeWarningMeasureTheme(themeColor, themeVariant),\n  height = theme.bar.height,\n  width = theme.bar.width\n}) => {\n  // Comparative measure component\n  const measure = React.cloneElement(measureComponent, Object.assign({\n    allowTooltip,\n    ariaDesc,\n    ariaTitle,\n    barWidth,\n    constrainToVisibleArea,\n    data,\n    domain,\n    height,\n    horizontal,\n    labelComponent,\n    labels,\n    padding,\n    standalone: false,\n    theme,\n    width,\n    y\n  }, measureComponent.props));\n  return standalone ? React.createElement(ChartContainer, {\n    desc: ariaDesc,\n    height: height,\n    title: ariaTitle,\n    width: width\n  }, measure) : React.createElement(React.Fragment, null, measure);\n};\nChartBulletComparativeWarningMeasure.displayName = 'ChartBulletComparativeWarningMeasure'; // Note: VictoryBar.role must be hoisted\n\nhoistNonReactStatics(ChartBulletComparativeWarningMeasure, VictoryBar);","map":{"version":3,"sources":["../../../../src/components/ChartBullet/ChartBulletComparativeWarningMeasure.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,OAAO,oBAAP,MAAiC,yBAAjC;AAEA,SAAS,UAAT,QAA2B,aAA3B;AACA,SAAS,cAAT,QAA+B,mBAA/B;AAEA,SAAS,uCAAT,QAAwD,eAAxD;AACA,SAAS,6BAAT,QAA8C,iCAA9C;AAqKA,OAAO,MAAM,oCAAoC,GAAuE,CAAC;AACvH,EAAA,YAAY,GAAG,IADwG;AAEvH,EAAA,QAFuH;AAGvH,EAAA,SAHuH;AAIvH,EAAA,QAJuH;AAKvH,EAAA,sBAAsB,GAAG,KAL8F;AAMvH,EAAA,IANuH;AAOvH,EAAA,MAPuH;AAQvH,EAAA,UAAU,GAAG,IAR0G;AASvH,EAAA,cATuH;AAUvH,EAAA,MAVuH;AAWvH,EAAA,gBAAgB,GAAG,KAAA,CAAA,aAAA,CAAC,6BAAD,EAA8B,IAA9B,CAXoG;AAYvH,EAAA,OAZuH;AAavH,EAAA,UAAU,GAAG,IAb0G;AAcvH,EAAA,UAduH;AAevH,EAAA,YAfuH;AAgBvH,EAAA,CAhBuH;AAkBvH;AACA,EAAA,KAAK,GAAG,uCAAuC,CAAC,UAAD,EAAa,YAAb,CAnBwE;AAoBvH,EAAA,MAAM,GAAG,KAAK,CAAC,GAAN,CAAU,MApBoG;AAqBvH,EAAA,KAAK,GAAG,KAAK,CAAC,GAAN,CAAU;AArBqG,CAAD,KAsBxE;AAC9C;AACA,QAAM,OAAO,GAAG,KAAK,CAAC,YAAN,CAAmB,gBAAnB,EAAmC,MAAA,CAAA,MAAA,CAAA;AACjD,IAAA,YADiD;AAEjD,IAAA,QAFiD;AAGjD,IAAA,SAHiD;AAIjD,IAAA,QAJiD;AAKjD,IAAA,sBALiD;AAMjD,IAAA,IANiD;AAOjD,IAAA,MAPiD;AAQjD,IAAA,MARiD;AASjD,IAAA,UATiD;AAUjD,IAAA,cAViD;AAWjD,IAAA,MAXiD;AAYjD,IAAA,OAZiD;AAajD,IAAA,UAAU,EAAE,KAbqC;AAcjD,IAAA,KAdiD;AAejD,IAAA,KAfiD;AAgBjD,IAAA;AAhBiD,GAAA,EAiB9C,gBAAgB,CAAC,KAjB6B,CAAnC,CAAhB;AAoBA,SAAO,UAAU,GACf,KAAA,CAAA,aAAA,CAAC,cAAD,EAAe;AAAC,IAAA,IAAI,EAAE,QAAP;AAAiB,IAAA,MAAM,EAAE,MAAzB;AAAiC,IAAA,KAAK,EAAE,SAAxC;AAAmD,IAAA,KAAK,EAAE;AAA1D,GAAf,EACG,OADH,CADe,GAKf,KAAA,CAAA,aAAA,CAAC,KAAK,CAAC,QAAP,EAAe,IAAf,EAAiB,OAAjB,CALF;AAOD,CAnDM;AAoDP,oCAAoC,CAAC,WAArC,GAAmD,sCAAnD,C,CAEA;;AACA,oBAAoB,CAAC,oCAAD,EAAuC,UAAvC,CAApB","sourceRoot":"","sourcesContent":["import * as React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { VictoryBar } from 'victory-bar';\nimport { ChartContainer } from '../ChartContainer';\nimport { getBulletComparativeWarningMeasureTheme } from '../ChartUtils';\nimport { ChartBulletComparativeMeasure } from './ChartBulletComparativeMeasure';\nexport const ChartBulletComparativeWarningMeasure = ({ allowTooltip = true, ariaDesc, ariaTitle, barWidth, constrainToVisibleArea = false, data, domain, horizontal = true, labelComponent, labels, measureComponent = React.createElement(ChartBulletComparativeMeasure, null), padding, standalone = true, themeColor, themeVariant, y, \n// destructure last\ntheme = getBulletComparativeWarningMeasureTheme(themeColor, themeVariant), height = theme.bar.height, width = theme.bar.width }) => {\n    // Comparative measure component\n    const measure = React.cloneElement(measureComponent, Object.assign({ allowTooltip,\n        ariaDesc,\n        ariaTitle,\n        barWidth,\n        constrainToVisibleArea,\n        data,\n        domain,\n        height,\n        horizontal,\n        labelComponent,\n        labels,\n        padding, standalone: false, theme,\n        width,\n        y }, measureComponent.props));\n    return standalone ? (React.createElement(ChartContainer, { desc: ariaDesc, height: height, title: ariaTitle, width: width }, measure)) : (React.createElement(React.Fragment, null, measure));\n};\nChartBulletComparativeWarningMeasure.displayName = 'ChartBulletComparativeWarningMeasure';\n// Note: VictoryBar.role must be hoisted\nhoistNonReactStatics(ChartBulletComparativeWarningMeasure, VictoryBar);\n//# sourceMappingURL=ChartBulletComparativeWarningMeasure.js.map"]},"metadata":{},"sourceType":"module"}