{"ast":null,"code":"import { getPrimaryDotMeasureData, getComparativeErrorMeasureData, getComparativeWarningMeasureData, getPrimarySegmentedMeasureData, getQualitativeRangeData } from './chart-bullet-data';\nimport { getBulletTheme } from '../../ChartUtils';\n\nconst getLegendColorScale = (computedData, legendData) => {\n  const colorScale = [];\n  legendData.forEach((data, index) => {\n    for (const i of computedData) {\n      if (index === i._index) {\n        colorScale.push(i._color);\n      }\n    }\n  });\n  return colorScale;\n};\n\nexport const getColorScale = ({\n  comparativeErrorMeasureData,\n  comparativeErrorMeasureLegendData,\n  comparativeWarningMeasureData,\n  comparativeWarningMeasureLegendData,\n  invert,\n  primaryDotMeasureData,\n  primaryDotMeasureLegendData,\n  primarySegmentedMeasureData,\n  primarySegmentedMeasureLegendData,\n  qualitativeRangeData,\n  qualitativeRangeLegendData,\n  themeColor,\n  themeVariant\n}) => {\n  const colorScale = [];\n\n  if (primaryDotMeasureLegendData && primaryDotMeasureLegendData.length) {\n    const computedData = getPrimaryDotMeasureData({\n      data: primaryDotMeasureData,\n      invert\n    });\n    colorScale.push(...getLegendColorScale(computedData, primaryDotMeasureLegendData));\n  }\n\n  if (primarySegmentedMeasureLegendData && primarySegmentedMeasureLegendData.length) {\n    const computedData = getPrimarySegmentedMeasureData({\n      data: primarySegmentedMeasureData,\n      invert,\n      themeColor,\n      themeVariant\n    });\n    colorScale.push(...getLegendColorScale(computedData, primarySegmentedMeasureLegendData));\n  }\n\n  if (comparativeWarningMeasureLegendData && comparativeWarningMeasureLegendData.length) {\n    const computedData = getComparativeWarningMeasureData({\n      data: comparativeWarningMeasureData,\n      invert,\n      themeColor,\n      themeVariant\n    });\n    colorScale.push(...getLegendColorScale(computedData, comparativeWarningMeasureLegendData));\n  }\n\n  if (comparativeErrorMeasureLegendData && comparativeErrorMeasureLegendData.length) {\n    const computedData = getComparativeErrorMeasureData({\n      data: comparativeErrorMeasureData,\n      invert,\n      themeColor,\n      themeVariant\n    });\n    colorScale.push(...getLegendColorScale(computedData, comparativeErrorMeasureLegendData));\n  }\n\n  if (qualitativeRangeLegendData && qualitativeRangeLegendData.length) {\n    const computedData = getQualitativeRangeData({\n      data: qualitativeRangeData,\n      invert\n    });\n    colorScale.push(...getLegendColorScale(computedData, qualitativeRangeLegendData));\n  }\n\n  return colorScale;\n}; // Get bullet chart theme with legend color scale\n\nexport const getBulletThemeWithLegendColorScale = ({\n  comparativeErrorMeasureData,\n  comparativeErrorMeasureLegendData,\n  comparativeWarningMeasureData,\n  comparativeWarningMeasureLegendData,\n  invert,\n  primaryDotMeasureData,\n  primaryDotMeasureLegendData,\n  primarySegmentedMeasureData,\n  primarySegmentedMeasureLegendData,\n  qualitativeRangeData,\n  qualitativeRangeLegendData,\n  themeColor,\n  themeVariant\n}) => {\n  const colorScale = getColorScale({\n    comparativeErrorMeasureData,\n    comparativeErrorMeasureLegendData,\n    comparativeWarningMeasureData,\n    comparativeWarningMeasureLegendData,\n    invert,\n    primaryDotMeasureData,\n    primaryDotMeasureLegendData,\n    primarySegmentedMeasureData,\n    primarySegmentedMeasureLegendData,\n    qualitativeRangeData,\n    qualitativeRangeLegendData,\n    themeColor,\n    themeVariant\n  });\n  const theme = getBulletTheme(themeColor, themeVariant);\n  theme.legend.colorScale = [...colorScale];\n  return theme;\n};","map":{"version":3,"sources":["../../../../../src/components/ChartBullet/utils/chart-bullet-theme.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { getPrimaryDotMeasureData, getComparativeErrorMeasureData, getComparativeWarningMeasureData, getPrimarySegmentedMeasureData, getQualitativeRangeData } from './chart-bullet-data';\nimport { getBulletTheme } from '../../ChartUtils';\nconst getLegendColorScale = (computedData, legendData) => {\n    const colorScale = [];\n    legendData.forEach((data, index) => {\n        for (const i of computedData) {\n            if (index === i._index) {\n                colorScale.push(i._color);\n            }\n        }\n    });\n    return colorScale;\n};\nexport const getColorScale = ({ comparativeErrorMeasureData, comparativeErrorMeasureLegendData, comparativeWarningMeasureData, comparativeWarningMeasureLegendData, invert, primaryDotMeasureData, primaryDotMeasureLegendData, primarySegmentedMeasureData, primarySegmentedMeasureLegendData, qualitativeRangeData, qualitativeRangeLegendData, themeColor, themeVariant }) => {\n    const colorScale = [];\n    if (primaryDotMeasureLegendData && primaryDotMeasureLegendData.length) {\n        const computedData = getPrimaryDotMeasureData({\n            data: primaryDotMeasureData,\n            invert\n        });\n        colorScale.push(...getLegendColorScale(computedData, primaryDotMeasureLegendData));\n    }\n    if (primarySegmentedMeasureLegendData && primarySegmentedMeasureLegendData.length) {\n        const computedData = getPrimarySegmentedMeasureData({\n            data: primarySegmentedMeasureData,\n            invert,\n            themeColor,\n            themeVariant\n        });\n        colorScale.push(...getLegendColorScale(computedData, primarySegmentedMeasureLegendData));\n    }\n    if (comparativeWarningMeasureLegendData && comparativeWarningMeasureLegendData.length) {\n        const computedData = getComparativeWarningMeasureData({\n            data: comparativeWarningMeasureData,\n            invert,\n            themeColor,\n            themeVariant\n        });\n        colorScale.push(...getLegendColorScale(computedData, comparativeWarningMeasureLegendData));\n    }\n    if (comparativeErrorMeasureLegendData && comparativeErrorMeasureLegendData.length) {\n        const computedData = getComparativeErrorMeasureData({\n            data: comparativeErrorMeasureData,\n            invert,\n            themeColor,\n            themeVariant\n        });\n        colorScale.push(...getLegendColorScale(computedData, comparativeErrorMeasureLegendData));\n    }\n    if (qualitativeRangeLegendData && qualitativeRangeLegendData.length) {\n        const computedData = getQualitativeRangeData({\n            data: qualitativeRangeData,\n            invert\n        });\n        colorScale.push(...getLegendColorScale(computedData, qualitativeRangeLegendData));\n    }\n    return colorScale;\n};\n// Get bullet chart theme with legend color scale\nexport const getBulletThemeWithLegendColorScale = ({ comparativeErrorMeasureData, comparativeErrorMeasureLegendData, comparativeWarningMeasureData, comparativeWarningMeasureLegendData, invert, primaryDotMeasureData, primaryDotMeasureLegendData, primarySegmentedMeasureData, primarySegmentedMeasureLegendData, qualitativeRangeData, qualitativeRangeLegendData, themeColor, themeVariant }) => {\n    const colorScale = getColorScale({\n        comparativeErrorMeasureData,\n        comparativeErrorMeasureLegendData,\n        comparativeWarningMeasureData,\n        comparativeWarningMeasureLegendData,\n        invert,\n        primaryDotMeasureData,\n        primaryDotMeasureLegendData,\n        primarySegmentedMeasureData,\n        primarySegmentedMeasureLegendData,\n        qualitativeRangeData,\n        qualitativeRangeLegendData,\n        themeColor,\n        themeVariant\n    });\n    const theme = getBulletTheme(themeColor, themeVariant);\n    theme.legend.colorScale = [...colorScale];\n    return theme;\n};\n//# sourceMappingURL=chart-bullet-theme.js.map"]},"metadata":{},"sourceType":"module"}