{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { VictoryAxis } from 'victory-axis';\nimport { ChartContainer } from '../ChartContainer';\nimport { getAxisTheme, getTheme } from '../ChartUtils';\nexport const ChartAxis = _a => {\n  var {\n    containerComponent = React.createElement(ChartContainer, null),\n    showGrid = false,\n    themeColor,\n    themeVariant,\n    // destructure last\n    theme = getTheme(themeColor, themeVariant)\n  } = _a,\n      rest = __rest(_a, [\"containerComponent\", \"showGrid\", \"themeColor\", \"themeVariant\", \"theme\"]); // Clone so users can override container props\n\n\n  const container = React.cloneElement(containerComponent, Object.assign({\n    theme\n  }, containerComponent.props)); // Note: containerComponent is required for theme\n\n  return React.createElement(VictoryAxis, Object.assign({\n    containerComponent: container,\n    theme: showGrid ? getAxisTheme(themeColor, themeVariant) : theme\n  }, rest));\n};\nChartAxis.displayName = 'ChartAxis';\nhoistNonReactStatics(ChartAxis, VictoryAxis);","map":{"version":3,"sources":["../../../../src/components/ChartAxis/ChartAxis.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,OAAO,oBAAP,MAAiC,yBAAjC;AAeA,SAAS,WAAT,QAAsE,cAAtE;AACA,SAAS,cAAT,QAA+B,mBAA/B;AAEA,SAAS,YAAT,EAAuB,QAAvB,QAAuC,eAAvC;AAyaA,OAAO,MAAM,SAAS,GAA6C,EAAD,IAS7C;MAT8C;AACjE,IAAA,kBAAkB,GAAG,KAAA,CAAA,aAAA,CAAC,cAAD,EAAe,IAAf,CAD4C;AAEjE,IAAA,QAAQ,GAAG,KAFsD;AAGjE,IAAA,UAHiE;AAIjE,IAAA,YAJiE;AAMjE;AACA,IAAA,KAAK,GAAG,QAAQ,CAAC,UAAD,EAAa,YAAb;AAPiD,MAOvB,E;MACvC,IAAI,GAAA,MAAA,CAAA,EAAA,EAR0D,CAAA,oBAAA,EAAA,UAAA,EAAA,YAAA,EAAA,cAAA,EAAA,OAAA,CAQ1D,C,CACY,CACnB;;;AACA,QAAM,SAAS,GAAG,KAAK,CAAC,YAAN,CAAmB,kBAAnB,EAAqC,MAAA,CAAA,MAAA,CAAA;AACrD,IAAA;AADqD,GAAA,EAElD,kBAAkB,CAAC,KAF+B,CAArC,CAAlB,CAFmB,CAOnB;;AACA,SACE,KAAA,CAAA,aAAA,CAAC,WAAD,EAAY,MAAA,CAAA,MAAA,CAAA;AACV,IAAA,kBAAkB,EAAE,SADV;AAEV,IAAA,KAAK,EAAE,QAAQ,GAAG,YAAY,CAAC,UAAD,EAAa,YAAb,CAAf,GAA4C;AAFjD,GAAA,EAGN,IAHM,CAAZ,CADF;AAOD,CAxBM;AAyBP,SAAS,CAAC,WAAV,GAAwB,WAAxB;AAEA,oBAAoB,CAAC,SAAD,EAAY,WAAZ,CAApB","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { VictoryAxis } from 'victory-axis';\nimport { ChartContainer } from '../ChartContainer';\nimport { getAxisTheme, getTheme } from '../ChartUtils';\nexport const ChartAxis = (_a) => {\n    var { containerComponent = React.createElement(ChartContainer, null), showGrid = false, themeColor, themeVariant, \n    // destructure last\n    theme = getTheme(themeColor, themeVariant) } = _a, rest = __rest(_a, [\"containerComponent\", \"showGrid\", \"themeColor\", \"themeVariant\", \"theme\"]);\n    // Clone so users can override container props\n    const container = React.cloneElement(containerComponent, Object.assign({ theme }, containerComponent.props));\n    // Note: containerComponent is required for theme\n    return (React.createElement(VictoryAxis, Object.assign({ containerComponent: container, theme: showGrid ? getAxisTheme(themeColor, themeVariant) : theme }, rest)));\n};\nChartAxis.displayName = 'ChartAxis';\nhoistNonReactStatics(ChartAxis, VictoryAxis);\n//# sourceMappingURL=ChartAxis.js.map"]},"metadata":{},"sourceType":"module"}