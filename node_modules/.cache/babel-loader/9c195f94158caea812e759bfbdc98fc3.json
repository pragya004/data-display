{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { Helpers } from 'victory-core';\nimport { VictoryLegend } from 'victory-legend';\nimport { ChartLabel } from '../ChartLabel';\nimport { ChartLegend } from '../ChartLegend';\nimport { ChartLegendTooltipLabel } from './ChartLegendTooltipLabel';\nimport { ChartLegendTooltipStyles } from '../ChartTheme';\nimport { getLegendTooltipDataProps, getLegendTooltipSize, getLegendTooltipVisibleData, getLegendTooltipVisibleText, getTheme } from '../ChartUtils';\nexport const ChartLegendTooltipContent = _a => {\n  var {\n    activePoints,\n    center,\n    datum,\n    dx = 0,\n    dy = 0,\n    flyoutHeight,\n    flyoutWidth,\n    height,\n    labelComponent = React.createElement(ChartLegendTooltipLabel, null),\n    legendComponent = React.createElement(ChartLegend, null),\n    legendData,\n    text,\n    themeColor,\n    themeVariant,\n    title,\n    titleComponent = React.createElement(ChartLabel, null),\n    width,\n    // destructure last\n    theme = getTheme(themeColor, themeVariant)\n  } = _a,\n      rest = __rest(_a, [\"activePoints\", \"center\", \"datum\", \"dx\", \"dy\", \"flyoutHeight\", \"flyoutWidth\", \"height\", \"labelComponent\", \"legendComponent\", \"legendData\", \"text\", \"themeColor\", \"themeVariant\", \"title\", \"titleComponent\", \"width\", \"theme\"]);\n\n  const pointerLength = theme && theme.tooltip ? Helpers.evaluateProp(theme.tooltip.pointerLength) : 10;\n  const legendProps = getLegendTooltipDataProps(legendComponent.props);\n  const visibleLegendData = getLegendTooltipVisibleData({\n    activePoints,\n    colorScale: legendProps.colorScale,\n    legendData,\n    text,\n    theme\n  }); // Component offsets\n\n  const legendOffsetX = 0;\n  const legendOffsetY = title ? 5 : -10;\n  const titleOffsetX = 10;\n  const titleOffsetY = 0; // Returns x position of flyout\n\n  const getX = () => {\n    if (!(center || flyoutWidth || width)) {\n      const x = rest.x;\n      return x ? x : undefined;\n    }\n\n    const _flyoutWidth = Helpers.evaluateProp(flyoutWidth);\n\n    if (width > center.x + _flyoutWidth + pointerLength) {\n      return center.x + ChartLegendTooltipStyles.flyout.padding / 2;\n    } else if (center.x < _flyoutWidth + pointerLength) {\n      return ChartLegendTooltipStyles.flyout.padding / 2 - pointerLength;\n    } else {\n      return center.x - _flyoutWidth;\n    }\n  }; // Returns y position\n\n\n  const getY = () => {\n    if (!(center || flyoutHeight || height)) {\n      const y = rest.y;\n      return y ? y : undefined;\n    }\n\n    const _flyoutHeight = Helpers.evaluateProp(flyoutHeight);\n\n    if (center.y < _flyoutHeight / 2) {\n      return ChartLegendTooltipStyles.flyout.padding / 2;\n    } else if (center.y > height - _flyoutHeight / 2) {\n      return height - _flyoutHeight + ChartLegendTooltipStyles.flyout.padding / 2;\n    } else {\n      return center.y - _flyoutHeight / 2 + ChartLegendTooltipStyles.flyout.padding / 2;\n    }\n  }; // Min & max dimensions do not include flyout padding\n\n\n  const maxLegendDimensions = getLegendTooltipSize({\n    legendData: visibleLegendData,\n    legendProps,\n    text: getLegendTooltipVisibleText({\n      activePoints,\n      legendData,\n      text\n    }),\n    theme\n  });\n  const minLegendDimensions = getLegendTooltipSize({\n    legendData: [{\n      name: ''\n    }],\n    legendProps,\n    theme\n  }); // Returns the label component\n\n  const getLabelComponent = () => React.cloneElement(labelComponent, Object.assign({\n    dx: maxLegendDimensions.width - minLegendDimensions.width,\n    legendData: visibleLegendData\n  }, labelComponent.props)); // Returns the title component\n\n\n  const getTitleComponent = () => {\n    const _title = title instanceof Function ? title(datum) : title;\n\n    return React.cloneElement(titleComponent, Object.assign({\n      style: {\n        fill: ChartLegendTooltipStyles.label.fill,\n        fontWeight: ChartLegendTooltipStyles.label.fontWeight\n      },\n      text: _title,\n      textAnchor: 'start',\n      x: getX() + titleOffsetX + Helpers.evaluateProp(dx),\n      y: getY() + titleOffsetY + Helpers.evaluateProp(dy)\n    }, titleComponent.props));\n  }; // Returns the legebd component\n\n\n  const getLegendComponent = () => React.cloneElement(legendComponent, Object.assign({\n    data: getLegendTooltipVisibleData({\n      activePoints,\n      colorScale: legendProps.colorScale,\n      legendData,\n      text,\n      textAsLegendData: true,\n      theme\n    }),\n    labelComponent: getLabelComponent(),\n    standalone: false,\n    theme,\n    x: getX() + legendOffsetX + Helpers.evaluateProp(dx),\n    y: getY() + legendOffsetY + Helpers.evaluateProp(dy)\n  }, legendProps));\n\n  return React.createElement(React.Fragment, null, getTitleComponent(), getLegendComponent());\n};\nChartLegendTooltipContent.displayName = 'ChartLegendTooltipContent'; // Note: VictoryLegend.role must be hoisted, but getBaseProps causes error with ChartVoronoiContainer\n\nhoistNonReactStatics(ChartLegendTooltipContent, VictoryLegend, {\n  getBaseProps: true\n});","map":{"version":3,"sources":["../../../../src/components/ChartLegendTooltip/ChartLegendTooltipContent.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { Helpers } from 'victory-core';\nimport { VictoryLegend } from 'victory-legend';\nimport { ChartLabel } from '../ChartLabel';\nimport { ChartLegend } from '../ChartLegend';\nimport { ChartLegendTooltipLabel } from './ChartLegendTooltipLabel';\nimport { ChartLegendTooltipStyles } from '../ChartTheme';\nimport { getLegendTooltipDataProps, getLegendTooltipSize, getLegendTooltipVisibleData, getLegendTooltipVisibleText, getTheme } from '../ChartUtils';\nexport const ChartLegendTooltipContent = (_a) => {\n    var { activePoints, center, datum, dx = 0, dy = 0, flyoutHeight, flyoutWidth, height, labelComponent = React.createElement(ChartLegendTooltipLabel, null), legendComponent = React.createElement(ChartLegend, null), legendData, text, themeColor, themeVariant, title, titleComponent = React.createElement(ChartLabel, null), width, \n    // destructure last\n    theme = getTheme(themeColor, themeVariant) } = _a, rest = __rest(_a, [\"activePoints\", \"center\", \"datum\", \"dx\", \"dy\", \"flyoutHeight\", \"flyoutWidth\", \"height\", \"labelComponent\", \"legendComponent\", \"legendData\", \"text\", \"themeColor\", \"themeVariant\", \"title\", \"titleComponent\", \"width\", \"theme\"]);\n    const pointerLength = theme && theme.tooltip ? Helpers.evaluateProp(theme.tooltip.pointerLength) : 10;\n    const legendProps = getLegendTooltipDataProps(legendComponent.props);\n    const visibleLegendData = getLegendTooltipVisibleData({\n        activePoints,\n        colorScale: legendProps.colorScale,\n        legendData,\n        text,\n        theme\n    });\n    // Component offsets\n    const legendOffsetX = 0;\n    const legendOffsetY = title ? 5 : -10;\n    const titleOffsetX = 10;\n    const titleOffsetY = 0;\n    // Returns x position of flyout\n    const getX = () => {\n        if (!(center || flyoutWidth || width)) {\n            const x = rest.x;\n            return x ? x : undefined;\n        }\n        const _flyoutWidth = Helpers.evaluateProp(flyoutWidth);\n        if (width > center.x + _flyoutWidth + pointerLength) {\n            return center.x + ChartLegendTooltipStyles.flyout.padding / 2;\n        }\n        else if (center.x < _flyoutWidth + pointerLength) {\n            return ChartLegendTooltipStyles.flyout.padding / 2 - pointerLength;\n        }\n        else {\n            return center.x - _flyoutWidth;\n        }\n    };\n    // Returns y position\n    const getY = () => {\n        if (!(center || flyoutHeight || height)) {\n            const y = rest.y;\n            return y ? y : undefined;\n        }\n        const _flyoutHeight = Helpers.evaluateProp(flyoutHeight);\n        if (center.y < _flyoutHeight / 2) {\n            return ChartLegendTooltipStyles.flyout.padding / 2;\n        }\n        else if (center.y > height - _flyoutHeight / 2) {\n            return height - _flyoutHeight + ChartLegendTooltipStyles.flyout.padding / 2;\n        }\n        else {\n            return center.y - _flyoutHeight / 2 + ChartLegendTooltipStyles.flyout.padding / 2;\n        }\n    };\n    // Min & max dimensions do not include flyout padding\n    const maxLegendDimensions = getLegendTooltipSize({\n        legendData: visibleLegendData,\n        legendProps,\n        text: getLegendTooltipVisibleText({ activePoints, legendData, text }),\n        theme\n    });\n    const minLegendDimensions = getLegendTooltipSize({\n        legendData: [{ name: '' }],\n        legendProps,\n        theme\n    });\n    // Returns the label component\n    const getLabelComponent = () => React.cloneElement(labelComponent, Object.assign({ dx: maxLegendDimensions.width - minLegendDimensions.width, legendData: visibleLegendData }, labelComponent.props));\n    // Returns the title component\n    const getTitleComponent = () => {\n        const _title = title instanceof Function ? title(datum) : title;\n        return React.cloneElement(titleComponent, Object.assign({ style: {\n                fill: ChartLegendTooltipStyles.label.fill,\n                fontWeight: ChartLegendTooltipStyles.label.fontWeight\n            }, text: _title, textAnchor: 'start', x: getX() + titleOffsetX + Helpers.evaluateProp(dx), y: getY() + titleOffsetY + Helpers.evaluateProp(dy) }, titleComponent.props));\n    };\n    // Returns the legebd component\n    const getLegendComponent = () => React.cloneElement(legendComponent, Object.assign({ data: getLegendTooltipVisibleData({\n            activePoints,\n            colorScale: legendProps.colorScale,\n            legendData,\n            text,\n            textAsLegendData: true,\n            theme\n        }), labelComponent: getLabelComponent(), standalone: false, theme, x: getX() + legendOffsetX + Helpers.evaluateProp(dx), y: getY() + legendOffsetY + Helpers.evaluateProp(dy) }, legendProps));\n    return (React.createElement(React.Fragment, null,\n        getTitleComponent(),\n        getLegendComponent()));\n};\nChartLegendTooltipContent.displayName = 'ChartLegendTooltipContent';\n// Note: VictoryLegend.role must be hoisted, but getBaseProps causes error with ChartVoronoiContainer\nhoistNonReactStatics(ChartLegendTooltipContent, VictoryLegend, { getBaseProps: true });\n//# sourceMappingURL=ChartLegendTooltipContent.js.map"]},"metadata":{},"sourceType":"module"}