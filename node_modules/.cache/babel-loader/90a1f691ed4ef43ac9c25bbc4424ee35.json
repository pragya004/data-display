{"ast":null,"code":"import { __rest } from \"tslib\";\nimport { ChartBulletStyles } from '../../ChartTheme';\nimport { getBulletComparativeErrorMeasureTheme, getBulletComparativeMeasureTheme, getBulletComparativeWarningMeasureTheme, getBulletPrimaryDotMeasureTheme, getBulletPrimarySegmentedMeasureTheme, getBulletQualitativeRangeTheme } from '../../ChartUtils';\n\nconst scaleDimensions = ({\n  defaultSize,\n  height,\n  horizontal = true,\n  scale = 1,\n  value,\n  width\n}) => {\n  if (horizontal && height > defaultSize) {\n    return value + (height - defaultSize) * scale;\n  } else if (horizontal) {\n    return value - (defaultSize - height) * scale;\n  } else if (width > defaultSize) {\n    return value + (width - defaultSize) * scale;\n  }\n\n  return value - (defaultSize - width) * scale;\n}; // Scale bar width per the given size properties\n\n\nexport const scaleBarWidth = props => Math.max(scaleDimensions(props), 0); // Scale size per the given size properties\n\nexport const scaleSize = _a => {\n  var {\n    value\n  } = _a,\n      rest = __rest(_a, [\"value\"]);\n\n  return Math.round(scaleDimensions(Object.assign({\n    scale: 1 / value,\n    value\n  }, rest)));\n};\nexport const getComparativeMeasureErrorWidth = ({\n  height,\n  horizontal,\n  themeColor,\n  themeVariant,\n  width,\n  // destructure last\n  theme = getBulletComparativeErrorMeasureTheme(themeColor, themeVariant)\n}) => scaleBarWidth({\n  defaultSize: theme.bar.height,\n  height,\n  horizontal,\n  value: ChartBulletStyles.comparativeMeasureErrorWidth,\n  width\n});\nexport const getComparativeMeasureWidth = ({\n  height,\n  horizontal,\n  themeColor,\n  themeVariant,\n  width,\n  // destructure last\n  theme = getBulletComparativeMeasureTheme(themeColor, themeVariant)\n}) => scaleBarWidth({\n  defaultSize: theme.bar.height,\n  height,\n  horizontal,\n  value: ChartBulletStyles.comparativeMeasureWidth,\n  width\n});\nexport const getComparativeMeasureWarningWidth = ({\n  height,\n  horizontal,\n  themeColor,\n  themeVariant,\n  width,\n  // destructure last\n  theme = getBulletComparativeWarningMeasureTheme(themeColor, themeVariant)\n}) => scaleBarWidth({\n  defaultSize: theme.bar.height,\n  height,\n  horizontal,\n  value: ChartBulletStyles.comparativeMeasureWarningWidth,\n  width\n});\nexport const getPrimaryDotMeasureSize = ({\n  height,\n  horizontal,\n  themeColor,\n  themeVariant,\n  width,\n  // destructure last\n  theme = getBulletPrimaryDotMeasureTheme(themeColor, themeVariant)\n}) => scaleSize({\n  defaultSize: theme.group.height,\n  height,\n  horizontal,\n  value: ChartBulletStyles.primaryDotMeasureSize,\n  width\n});\nexport const getPrimarySegmentedMeasureWidth = ({\n  height,\n  horizontal,\n  themeColor,\n  themeVariant,\n  width,\n  // destructure last\n  theme = getBulletPrimarySegmentedMeasureTheme(themeColor, themeVariant)\n}) => scaleBarWidth({\n  defaultSize: theme.group.height,\n  height,\n  horizontal,\n  scale: 0.3,\n  value: ChartBulletStyles.primarySegmentedMeasureWidth,\n  width\n});\nexport const getQualitativeRangeBarWidth = ({\n  height,\n  horizontal,\n  themeColor,\n  themeVariant,\n  width,\n  // destructure last\n  theme = getBulletQualitativeRangeTheme(themeColor, themeVariant)\n}) => scaleBarWidth({\n  defaultSize: theme.group.height,\n  height,\n  horizontal,\n  value: ChartBulletStyles.qualitativeRangeWidth,\n  width\n});","map":{"version":3,"sources":["../../../../../src/components/ChartBullet/utils/chart-bullet-size.ts"],"names":[],"mappings":";AACA,SAAS,iBAAT,QAAkC,kBAAlC;AACA,SACE,qCADF,EAEE,gCAFF,EAGE,uCAHF,EAIE,+BAJF,EAKE,qCALF,EAME,8BANF,QAOO,kBAPP;;AAkBA,MAAM,eAAe,GAAG,CAAC;AACvB,EAAA,WADuB;AAEvB,EAAA,MAFuB;AAGvB,EAAA,UAAU,GAAG,IAHU;AAIvB,EAAA,KAAK,GAAG,CAJe;AAKvB,EAAA,KALuB;AAMvB,EAAA;AANuB,CAAD,KAOQ;AAC9B,MAAI,UAAU,IAAI,MAAM,GAAG,WAA3B,EAAwC;AACtC,WAAO,KAAK,GAAG,CAAC,MAAM,GAAG,WAAV,IAAyB,KAAxC;AACD,GAFD,MAEO,IAAI,UAAJ,EAAgB;AACrB,WAAO,KAAK,GAAG,CAAC,WAAW,GAAG,MAAf,IAAyB,KAAxC;AACD,GAFM,MAEA,IAAI,KAAK,GAAG,WAAZ,EAAyB;AAC9B,WAAO,KAAK,GAAG,CAAC,KAAK,GAAG,WAAT,IAAwB,KAAvC;AACD;;AACD,SAAO,KAAK,GAAG,CAAC,WAAW,GAAG,KAAf,IAAwB,KAAvC;AACD,CAhBD,C,CAkBA;;;AACA,OAAO,MAAM,aAAa,GAAI,KAAD,IAAsC,IAAI,CAAC,GAAL,CAAS,eAAe,CAAC,KAAD,CAAxB,EAAiC,CAAjC,CAA5D,C,CAEP;;AACA,OAAO,MAAM,SAAS,GAAI,EAAD,IAAkD;MAAjD;AAAE,IAAA;AAAF,MAAO,E;MAAK,IAAI,GAAA,MAAA,CAAA,EAAA,EAAhB,CAAA,OAAA,CAAgB,C;;AACxC,SAAA,IAAI,CAAC,KAAL,CACE,eAAe,CAAA,MAAA,CAAA,MAAA,CAAA;AACb,IAAA,KAAK,EAAE,IAAI,KADE;AAEb,IAAA;AAFa,GAAA,EAGV,IAHU,CAAA,CADjB,CAAA;AAMC,CAPI;AAkBP,OAAO,MAAM,+BAA+B,GAAG,CAAC;AAC9C,EAAA,MAD8C;AAE9C,EAAA,UAF8C;AAG9C,EAAA,UAH8C;AAI9C,EAAA,YAJ8C;AAK9C,EAAA,KAL8C;AAO9C;AACA,EAAA,KAAK,GAAG,qCAAqC,CAAC,UAAD,EAAa,YAAb;AARC,CAAD,KAU7C,aAAa,CAAC;AACZ,EAAA,WAAW,EAAE,KAAK,CAAC,GAAN,CAAU,MADX;AAEZ,EAAA,MAFY;AAGZ,EAAA,UAHY;AAIZ,EAAA,KAAK,EAAE,iBAAiB,CAAC,4BAJb;AAKZ,EAAA;AALY,CAAD,CAVR;AAkBP,OAAO,MAAM,0BAA0B,GAAG,CAAC;AACzC,EAAA,MADyC;AAEzC,EAAA,UAFyC;AAGzC,EAAA,UAHyC;AAIzC,EAAA,YAJyC;AAKzC,EAAA,KALyC;AAOzC;AACA,EAAA,KAAK,GAAG,gCAAgC,CAAC,UAAD,EAAa,YAAb;AARC,CAAD,KAUxC,aAAa,CAAC;AACZ,EAAA,WAAW,EAAE,KAAK,CAAC,GAAN,CAAU,MADX;AAEZ,EAAA,MAFY;AAGZ,EAAA,UAHY;AAIZ,EAAA,KAAK,EAAE,iBAAiB,CAAC,uBAJb;AAKZ,EAAA;AALY,CAAD,CAVR;AAkBP,OAAO,MAAM,iCAAiC,GAAG,CAAC;AAChD,EAAA,MADgD;AAEhD,EAAA,UAFgD;AAGhD,EAAA,UAHgD;AAIhD,EAAA,YAJgD;AAKhD,EAAA,KALgD;AAOhD;AACA,EAAA,KAAK,GAAG,uCAAuC,CAAC,UAAD,EAAa,YAAb;AARC,CAAD,KAU/C,aAAa,CAAC;AACZ,EAAA,WAAW,EAAE,KAAK,CAAC,GAAN,CAAU,MADX;AAEZ,EAAA,MAFY;AAGZ,EAAA,UAHY;AAIZ,EAAA,KAAK,EAAE,iBAAiB,CAAC,8BAJb;AAKZ,EAAA;AALY,CAAD,CAVR;AAkBP,OAAO,MAAM,wBAAwB,GAAG,CAAC;AACvC,EAAA,MADuC;AAEvC,EAAA,UAFuC;AAGvC,EAAA,UAHuC;AAIvC,EAAA,YAJuC;AAKvC,EAAA,KALuC;AAOvC;AACA,EAAA,KAAK,GAAG,+BAA+B,CAAC,UAAD,EAAa,YAAb;AARA,CAAD,KAUtC,SAAS,CAAC;AACR,EAAA,WAAW,EAAE,KAAK,CAAC,KAAN,CAAY,MADjB;AAER,EAAA,MAFQ;AAGR,EAAA,UAHQ;AAIR,EAAA,KAAK,EAAE,iBAAiB,CAAC,qBAJjB;AAKR,EAAA;AALQ,CAAD,CAVJ;AAkBP,OAAO,MAAM,+BAA+B,GAAG,CAAC;AAC9C,EAAA,MAD8C;AAE9C,EAAA,UAF8C;AAG9C,EAAA,UAH8C;AAI9C,EAAA,YAJ8C;AAK9C,EAAA,KAL8C;AAO9C;AACA,EAAA,KAAK,GAAG,qCAAqC,CAAC,UAAD,EAAa,YAAb;AARC,CAAD,KAU7C,aAAa,CAAC;AACZ,EAAA,WAAW,EAAE,KAAK,CAAC,KAAN,CAAY,MADb;AAEZ,EAAA,MAFY;AAGZ,EAAA,UAHY;AAIZ,EAAA,KAAK,EAAE,GAJK;AAKZ,EAAA,KAAK,EAAE,iBAAiB,CAAC,4BALb;AAMZ,EAAA;AANY,CAAD,CAVR;AAmBP,OAAO,MAAM,2BAA2B,GAAG,CAAC;AAC1C,EAAA,MAD0C;AAE1C,EAAA,UAF0C;AAG1C,EAAA,UAH0C;AAI1C,EAAA,YAJ0C;AAK1C,EAAA,KAL0C;AAO1C;AACA,EAAA,KAAK,GAAG,8BAA8B,CAAC,UAAD,EAAa,YAAb;AARI,CAAD,KAUzC,aAAa,CAAC;AACZ,EAAA,WAAW,EAAE,KAAK,CAAC,KAAN,CAAY,MADb;AAEZ,EAAA,MAFY;AAGZ,EAAA,UAHY;AAIZ,EAAA,KAAK,EAAE,iBAAiB,CAAC,qBAJb;AAKZ,EAAA;AALY,CAAD,CAVR","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport { ChartBulletStyles } from '../../ChartTheme';\nimport { getBulletComparativeErrorMeasureTheme, getBulletComparativeMeasureTheme, getBulletComparativeWarningMeasureTheme, getBulletPrimaryDotMeasureTheme, getBulletPrimarySegmentedMeasureTheme, getBulletQualitativeRangeTheme } from '../../ChartUtils';\nconst scaleDimensions = ({ defaultSize, height, horizontal = true, scale = 1, value, width }) => {\n    if (horizontal && height > defaultSize) {\n        return value + (height - defaultSize) * scale;\n    }\n    else if (horizontal) {\n        return value - (defaultSize - height) * scale;\n    }\n    else if (width > defaultSize) {\n        return value + (width - defaultSize) * scale;\n    }\n    return value - (defaultSize - width) * scale;\n};\n// Scale bar width per the given size properties\nexport const scaleBarWidth = (props) => Math.max(scaleDimensions(props), 0);\n// Scale size per the given size properties\nexport const scaleSize = (_a) => {\n    var { value } = _a, rest = __rest(_a, [\"value\"]);\n    return Math.round(scaleDimensions(Object.assign({ scale: 1 / value, value }, rest)));\n};\nexport const getComparativeMeasureErrorWidth = ({ height, horizontal, themeColor, themeVariant, width, \n// destructure last\ntheme = getBulletComparativeErrorMeasureTheme(themeColor, themeVariant) }) => scaleBarWidth({\n    defaultSize: theme.bar.height,\n    height,\n    horizontal,\n    value: ChartBulletStyles.comparativeMeasureErrorWidth,\n    width\n});\nexport const getComparativeMeasureWidth = ({ height, horizontal, themeColor, themeVariant, width, \n// destructure last\ntheme = getBulletComparativeMeasureTheme(themeColor, themeVariant) }) => scaleBarWidth({\n    defaultSize: theme.bar.height,\n    height,\n    horizontal,\n    value: ChartBulletStyles.comparativeMeasureWidth,\n    width\n});\nexport const getComparativeMeasureWarningWidth = ({ height, horizontal, themeColor, themeVariant, width, \n// destructure last\ntheme = getBulletComparativeWarningMeasureTheme(themeColor, themeVariant) }) => scaleBarWidth({\n    defaultSize: theme.bar.height,\n    height,\n    horizontal,\n    value: ChartBulletStyles.comparativeMeasureWarningWidth,\n    width\n});\nexport const getPrimaryDotMeasureSize = ({ height, horizontal, themeColor, themeVariant, width, \n// destructure last\ntheme = getBulletPrimaryDotMeasureTheme(themeColor, themeVariant) }) => scaleSize({\n    defaultSize: theme.group.height,\n    height,\n    horizontal,\n    value: ChartBulletStyles.primaryDotMeasureSize,\n    width\n});\nexport const getPrimarySegmentedMeasureWidth = ({ height, horizontal, themeColor, themeVariant, width, \n// destructure last\ntheme = getBulletPrimarySegmentedMeasureTheme(themeColor, themeVariant) }) => scaleBarWidth({\n    defaultSize: theme.group.height,\n    height,\n    horizontal,\n    scale: 0.3,\n    value: ChartBulletStyles.primarySegmentedMeasureWidth,\n    width\n});\nexport const getQualitativeRangeBarWidth = ({ height, horizontal, themeColor, themeVariant, width, \n// destructure last\ntheme = getBulletQualitativeRangeTheme(themeColor, themeVariant) }) => scaleBarWidth({\n    defaultSize: theme.group.height,\n    height,\n    horizontal,\n    value: ChartBulletStyles.qualitativeRangeWidth,\n    width\n});\n//# sourceMappingURL=chart-bullet-size.js.map"]},"metadata":{},"sourceType":"module"}