{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { Data, Helpers } from 'victory-core';\nimport { VictoryPie } from 'victory-pie';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { ChartContainer } from '../ChartContainer';\nimport { ChartDonut } from '../ChartDonut';\nimport { ChartDonutStyles } from '../ChartTheme';\nimport { getDonutThresholdDynamicTheme, getDonutThresholdStaticTheme, getPaddingForSide } from '../ChartUtils';\nexport var ChartDonutThresholdDonutOrientation;\n\n(function (ChartDonutThresholdDonutOrientation) {\n  ChartDonutThresholdDonutOrientation[\"left\"] = \"left\";\n  ChartDonutThresholdDonutOrientation[\"right\"] = \"right\";\n  ChartDonutThresholdDonutOrientation[\"top\"] = \"top\";\n})(ChartDonutThresholdDonutOrientation || (ChartDonutThresholdDonutOrientation = {}));\n\nexport var ChartDonutThresholdLabelOrientation;\n\n(function (ChartDonutThresholdLabelOrientation) {\n  ChartDonutThresholdLabelOrientation[\"horizontal\"] = \"horizontal\";\n  ChartDonutThresholdLabelOrientation[\"vertical\"] = \"vertical\";\n})(ChartDonutThresholdLabelOrientation || (ChartDonutThresholdLabelOrientation = {}));\n\nexport var ChartDonutThresholdLabelPosition;\n\n(function (ChartDonutThresholdLabelPosition) {\n  ChartDonutThresholdLabelPosition[\"centroid\"] = \"centroid\";\n  ChartDonutThresholdLabelPosition[\"endAngle\"] = \"endAngle\";\n  ChartDonutThresholdLabelPosition[\"startAngle\"] = \"startAngle\";\n})(ChartDonutThresholdLabelPosition || (ChartDonutThresholdLabelPosition = {}));\n\nexport var ChartDonutThresholdSortOrder;\n\n(function (ChartDonutThresholdSortOrder) {\n  ChartDonutThresholdSortOrder[\"ascending\"] = \"ascending\";\n  ChartDonutThresholdSortOrder[\"descending\"] = \"descending\";\n})(ChartDonutThresholdSortOrder || (ChartDonutThresholdSortOrder = {}));\n\nexport var ChartDonutThresholdSubTitlePosition;\n\n(function (ChartDonutThresholdSubTitlePosition) {\n  ChartDonutThresholdSubTitlePosition[\"bottom\"] = \"bottom\";\n  ChartDonutThresholdSubTitlePosition[\"center\"] = \"center\";\n  ChartDonutThresholdSubTitlePosition[\"right\"] = \"right\";\n})(ChartDonutThresholdSubTitlePosition || (ChartDonutThresholdSubTitlePosition = {}));\n\nexport const ChartDonutThreshold = _a => {\n  var {\n    allowTooltip = true,\n    ariaDesc,\n    ariaTitle,\n    children,\n    constrainToVisibleArea = false,\n    containerComponent = React.createElement(ChartContainer, null),\n    data = [],\n    invert = false,\n    labels = [],\n    // Don't show any tooltip labels by default, let consumer override if needed\n    padding,\n    radius,\n    standalone = true,\n    subTitlePosition = ChartDonutStyles.label.subTitlePosition,\n    themeColor,\n    themeVariant,\n    x,\n    y,\n    // destructure last\n    theme = getDonutThresholdStaticTheme(themeColor, themeVariant, invert),\n    height = theme.pie.height,\n    width = theme.pie.width\n  } = _a,\n      rest = __rest(_a, [\"allowTooltip\", \"ariaDesc\", \"ariaTitle\", \"children\", \"constrainToVisibleArea\", \"containerComponent\", \"data\", \"invert\", \"labels\", \"padding\", \"radius\", \"standalone\", \"subTitlePosition\", \"themeColor\", \"themeVariant\", \"x\", \"y\", \"theme\", \"height\", \"width\"]);\n\n  const defaultPadding = {\n    bottom: getPaddingForSide('bottom', padding, theme.pie.padding),\n    left: getPaddingForSide('left', padding, theme.pie.padding),\n    right: getPaddingForSide('right', padding, theme.pie.padding),\n    top: getPaddingForSide('top', padding, theme.pie.padding)\n  };\n  const chartRadius = radius || Helpers.getRadius({\n    height,\n    width,\n    padding: defaultPadding\n  }); // Returns computed data representing pie chart slices\n\n  const getComputedData = () => {\n    // Format and sort data. Sorting ensures thresholds are displayed in the correct order and simplifies calculations.\n    const datum = Data.formatData(data, Object.assign({\n      x,\n      y\n    }, rest), ['x', 'y']).sort((a, b) => a._y - b._y); // Data must be offset so that the sum of all data point y-values (including the final slice) == 100.\n\n    const [prev, computedData] = datum.reduce((acc, dataPoint) => [dataPoint._y, [...acc[1], {\n      x: dataPoint._x,\n      y: dataPoint._y - acc[0] // Must be offset by previous value\n\n    }]], [0, []]);\n    return [...computedData, {\n      y: prev ? 100 - prev : 0\n    }];\n  }; // Render dynamic utilization donut cart\n\n\n  const renderChildren = () => React.Children.toArray(children).map((child, index) => {\n    if (React.isValidElement(child)) {\n      const _a = child.props,\n            {\n        data: childData\n      } = _a,\n            childProps = __rest(_a, [\"data\"]);\n\n      const datum = Data.formatData([childData], childProps, ['x', 'y']); // Format child data independently of this component's props\n\n      const dynamicTheme = childProps.theme || getDonutThresholdDynamicTheme(childProps.themeColor || themeColor, childProps.themeVariant || themeVariant);\n      return React.cloneElement(child, Object.assign({\n        constrainToVisibleArea,\n        data: childData,\n        endAngle: 360 * (datum[0]._y ? datum[0]._y / 100 : 0),\n        height,\n        invert,\n        key: `pf-chart-donut-threshold-child-${index}`,\n        padding: defaultPadding,\n        radius: chartRadius - 14,\n        showStatic: false,\n        standalone: false,\n        subTitlePosition: childProps.subTitlePosition || subTitlePosition,\n        theme: dynamicTheme,\n        width\n      }, childProps));\n    }\n\n    return child;\n  }); // Static threshold donut chart\n\n\n  const chart = React.createElement(ChartDonut, Object.assign({\n    allowTooltip: allowTooltip,\n    constrainToVisibleArea: constrainToVisibleArea,\n    data: getComputedData(),\n    height: height,\n    key: \"pf-chart-donut-threshold\",\n    labels: labels,\n    padding: defaultPadding,\n    standalone: false,\n    theme: theme,\n    width: width\n  }, rest)); // Clone so users can override container props\n\n  const container = React.cloneElement(containerComponent, Object.assign({\n    desc: ariaDesc,\n    height,\n    title: ariaTitle,\n    width,\n    theme\n  }, containerComponent.props), [chart, renderChildren()]);\n  return standalone ? React.createElement(React.Fragment, null, container) : React.createElement(React.Fragment, null, chart, renderChildren());\n};\nChartDonutThreshold.displayName = 'ChartDonutThreshold'; // Note: VictoryPie.role must be hoisted\n\nhoistNonReactStatics(ChartDonutThreshold, VictoryPie);","map":{"version":3,"sources":["../../../../src/components/ChartDonutUtilization/ChartDonutThreshold.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,SAGE,IAHF,EAOE,OAPF,QAgBO,cAhBP;AAiBA,SAAqB,UAArB,QAAuC,aAAvC;AACA,OAAO,oBAAP,MAAiC,yBAAjC;AACA,SAAS,cAAT,QAA+B,mBAA/B;AACA,SAAS,UAAT,QAA4C,eAA5C;AACA,SAAS,gBAAT,QAAuD,eAAvD;AACA,SAAS,6BAAT,EAAwC,4BAAxC,EAAsE,iBAAtE,QAA+F,eAA/F;AAEA,OAAA,IAAY,mCAAZ;;AAAA,CAAA,UAAY,mCAAZ,EAA+C;AAC7C,EAAA,mCAAA,CAAA,MAAA,CAAA,GAAA,MAAA;AACA,EAAA,mCAAA,CAAA,OAAA,CAAA,GAAA,OAAA;AACA,EAAA,mCAAA,CAAA,KAAA,CAAA,GAAA,KAAA;AACD,CAJD,EAAY,mCAAmC,KAAnC,mCAAmC,GAAA,EAAA,CAA/C;;AAMA,OAAA,IAAY,mCAAZ;;AAAA,CAAA,UAAY,mCAAZ,EAA+C;AAC7C,EAAA,mCAAA,CAAA,YAAA,CAAA,GAAA,YAAA;AACA,EAAA,mCAAA,CAAA,UAAA,CAAA,GAAA,UAAA;AACD,CAHD,EAAY,mCAAmC,KAAnC,mCAAmC,GAAA,EAAA,CAA/C;;AAKA,OAAA,IAAY,gCAAZ;;AAAA,CAAA,UAAY,gCAAZ,EAA4C;AAC1C,EAAA,gCAAA,CAAA,UAAA,CAAA,GAAA,UAAA;AACA,EAAA,gCAAA,CAAA,UAAA,CAAA,GAAA,UAAA;AACA,EAAA,gCAAA,CAAA,YAAA,CAAA,GAAA,YAAA;AACD,CAJD,EAAY,gCAAgC,KAAhC,gCAAgC,GAAA,EAAA,CAA5C;;AAMA,OAAA,IAAY,4BAAZ;;AAAA,CAAA,UAAY,4BAAZ,EAAwC;AACtC,EAAA,4BAAA,CAAA,WAAA,CAAA,GAAA,WAAA;AACA,EAAA,4BAAA,CAAA,YAAA,CAAA,GAAA,YAAA;AACD,CAHD,EAAY,4BAA4B,KAA5B,4BAA4B,GAAA,EAAA,CAAxC;;AAKA,OAAA,IAAY,mCAAZ;;AAAA,CAAA,UAAY,mCAAZ,EAA+C;AAC7C,EAAA,mCAAA,CAAA,QAAA,CAAA,GAAA,QAAA;AACA,EAAA,mCAAA,CAAA,QAAA,CAAA,GAAA,QAAA;AACA,EAAA,mCAAA,CAAA,OAAA,CAAA,GAAA,OAAA;AACD,CAJD,EAAY,mCAAmC,KAAnC,mCAAmC,GAAA,EAAA,CAA/C;;AAsYA,OAAO,MAAM,mBAAmB,GAAuD,EAAD,IAwBvD;MAxBwD;AACrF,IAAA,YAAY,GAAG,IADsE;AAErF,IAAA,QAFqF;AAGrF,IAAA,SAHqF;AAIrF,IAAA,QAJqF;AAKrF,IAAA,sBAAsB,GAAG,KAL4D;AAMrF,IAAA,kBAAkB,GAAG,KAAA,CAAA,aAAA,CAAC,cAAD,EAAe,IAAf,CANgE;AAOrF,IAAA,IAAI,GAAG,EAP8E;AAQrF,IAAA,MAAM,GAAG,KAR4E;AASrF,IAAA,MAAM,GAAG,EAT4E;AASxE;AACb,IAAA,OAVqF;AAWrF,IAAA,MAXqF;AAYrF,IAAA,UAAU,GAAG,IAZwE;AAarF,IAAA,gBAAgB,GAAG,gBAAgB,CAAC,KAAjB,CAAuB,gBAb2C;AAcrF,IAAA,UAdqF;AAerF,IAAA,YAfqF;AAgBrF,IAAA,CAhBqF;AAiBrF,IAAA,CAjBqF;AAmBrF;AACA,IAAA,KAAK,GAAG,4BAA4B,CAAC,UAAD,EAAa,YAAb,EAA2B,MAA3B,CApBiD;AAqBrF,IAAA,MAAM,GAAG,KAAK,CAAC,GAAN,CAAU,MArBkE;AAsBrF,IAAA,KAAK,GAAG,KAAK,CAAC,GAAN,CAAU;AAtBmE,MAsB9D,E;MACpB,IAAI,GAAA,MAAA,CAAA,EAAA,EAvB8E,CAAA,cAAA,EAAA,UAAA,EAAA,WAAA,EAAA,UAAA,EAAA,wBAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,QAAA,EAAA,QAAA,EAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,kBAAA,EAAA,YAAA,EAAA,cAAA,EAAA,GAAA,EAAA,GAAA,EAAA,OAAA,EAAA,QAAA,EAAA,OAAA,CAuB9E,C;;AAEP,QAAM,cAAc,GAAG;AACrB,IAAA,MAAM,EAAE,iBAAiB,CAAC,QAAD,EAAW,OAAX,EAAoB,KAAK,CAAC,GAAN,CAAU,OAA9B,CADJ;AAErB,IAAA,IAAI,EAAE,iBAAiB,CAAC,MAAD,EAAS,OAAT,EAAkB,KAAK,CAAC,GAAN,CAAU,OAA5B,CAFF;AAGrB,IAAA,KAAK,EAAE,iBAAiB,CAAC,OAAD,EAAU,OAAV,EAAmB,KAAK,CAAC,GAAN,CAAU,OAA7B,CAHH;AAIrB,IAAA,GAAG,EAAE,iBAAiB,CAAC,KAAD,EAAQ,OAAR,EAAiB,KAAK,CAAC,GAAN,CAAU,OAA3B;AAJD,GAAvB;AAMA,QAAM,WAAW,GACf,MAAM,IACN,OAAO,CAAC,SAAR,CAAkB;AAChB,IAAA,MADgB;AAEhB,IAAA,KAFgB;AAGhB,IAAA,OAAO,EAAE;AAHO,GAAlB,CAFF,CAP6B,CAe7B;;AACA,QAAM,eAAe,GAAG,MAAK;AAC3B;AACA,UAAM,KAAK,GAAG,IAAI,CAAC,UAAL,CAAgB,IAAhB,EAAoB,MAAA,CAAA,MAAA,CAAA;AAAI,MAAA,CAAJ;AAAO,MAAA;AAAP,KAAA,EAAa,IAAb,CAApB,EAAyC,CAAC,GAAD,EAAM,GAAN,CAAzC,EAAqD,IAArD,CAA0D,CAAC,CAAD,EAAS,CAAT,KAAoB,CAAC,CAAC,EAAF,GAAO,CAAC,CAAC,EAAvF,CAAd,CAF2B,CAI3B;;AACA,UAAM,CAAC,IAAD,EAAO,YAAP,IAAuB,KAAK,CAAC,MAAN,CAC3B,CAAC,GAAD,EAAqB,SAArB,KAAwE,CACtE,SAAS,CAAC,EAD4D,EAEtE,CACE,GAAG,GAAG,CAAC,CAAD,CADR,EAEE;AACE,MAAA,CAAC,EAAE,SAAS,CAAC,EADf;AAEE,MAAA,CAAC,EAAE,SAAS,CAAC,EAAV,GAAe,GAAG,CAAC,CAAD,CAFvB,CAE2B;;AAF3B,KAFF,CAFsE,CAD7C,EAW3B,CAAC,CAAD,EAAI,EAAJ,CAX2B,CAA7B;AAcA,WAAO,CACL,GAAG,YADE,EAEL;AACE,MAAA,CAAC,EAAE,IAAI,GAAG,MAAM,IAAT,GAAgB;AADzB,KAFK,CAAP;AAMD,GAzBD,CAhB6B,CA2C7B;;;AACA,QAAM,cAAc,GAAG,MACrB,KAAK,CAAC,QAAN,CAAe,OAAf,CAAuB,QAAvB,EAAiC,GAAjC,CAAqC,CAAC,KAAD,EAAQ,KAAR,KAAiB;AACpD,QAAI,KAAK,CAAC,cAAN,CAAqB,KAArB,CAAJ,EAAiC;AAC/B,YAAM,EAAA,GAAqC,KAAK,CAAC,KAAjD;AAAA,YAAM;AAAE,QAAA,IAAI,EAAE;AAAR,UAAiB,EAAvB;AAAA,YAA4B,UAAU,GAAA,MAAA,CAAA,EAAA,EAAhC,CAAA,MAAA,CAAgC,CAAtC;;AACA,YAAM,KAAK,GAAG,IAAI,CAAC,UAAL,CAAgB,CAAC,SAAD,CAAhB,EAA6B,UAA7B,EAAyC,CAAC,GAAD,EAAM,GAAN,CAAzC,CAAd,CAF+B,CAEqC;;AACpE,YAAM,YAAY,GAChB,UAAU,CAAC,KAAX,IACA,6BAA6B,CAAC,UAAU,CAAC,UAAX,IAAyB,UAA1B,EAAsC,UAAU,CAAC,YAAX,IAA2B,YAAjE,CAF/B;AAIA,aAAO,KAAK,CAAC,YAAN,CAAmB,KAAnB,EAAwB,MAAA,CAAA,MAAA,CAAA;AAC7B,QAAA,sBAD6B;AAE7B,QAAA,IAAI,EAAE,SAFuB;AAG7B,QAAA,QAAQ,EAAE,OAAO,KAAK,CAAC,CAAD,CAAL,CAAS,EAAT,GAAc,KAAK,CAAC,CAAD,CAAL,CAAS,EAAT,GAAc,GAA5B,GAAkC,CAAzC,CAHmB;AAI7B,QAAA,MAJ6B;AAK7B,QAAA,MAL6B;AAM7B,QAAA,GAAG,EAAE,kCAAkC,KAAK,EANf;AAO7B,QAAA,OAAO,EAAE,cAPoB;AAQ7B,QAAA,MAAM,EAAE,WAAW,GAAG,EARO;AAS7B,QAAA,UAAU,EAAE,KATiB;AAU7B,QAAA,UAAU,EAAE,KAViB;AAW7B,QAAA,gBAAgB,EAAE,UAAU,CAAC,gBAAX,IAA+B,gBAXpB;AAY7B,QAAA,KAAK,EAAE,YAZsB;AAa7B,QAAA;AAb6B,OAAA,EAc1B,UAd0B,CAAxB,CAAP;AAgBD;;AACD,WAAO,KAAP;AACD,GA1BD,CADF,CA5C6B,CAyE7B;;;AACA,QAAM,KAAK,GACT,KAAA,CAAA,aAAA,CAAC,UAAD,EAAW,MAAA,CAAA,MAAA,CAAA;AACT,IAAA,YAAY,EAAE,YADL;AAET,IAAA,sBAAsB,EAAE,sBAFf;AAGT,IAAA,IAAI,EAAE,eAAe,EAHZ;AAIT,IAAA,MAAM,EAAE,MAJC;AAKT,IAAA,GAAG,EAAC,0BALK;AAMT,IAAA,MAAM,EAAE,MANC;AAOT,IAAA,OAAO,EAAE,cAPA;AAQT,IAAA,UAAU,EAAE,KARH;AAST,IAAA,KAAK,EAAE,KATE;AAUT,IAAA,KAAK,EAAE;AAVE,GAAA,EAWL,IAXK,CAAX,CADF,CA1E6B,CA0F7B;;AACA,QAAM,SAAS,GAAG,KAAK,CAAC,YAAN,CAChB,kBADgB,EACE,MAAA,CAAA,MAAA,CAAA;AAEhB,IAAA,IAAI,EAAE,QAFU;AAGhB,IAAA,MAHgB;AAIhB,IAAA,KAAK,EAAE,SAJS;AAKhB,IAAA,KALgB;AAMhB,IAAA;AANgB,GAAA,EAOb,kBAAkB,CAAC,KAPN,CADF,EAUhB,CAAC,KAAD,EAAQ,cAAc,EAAtB,CAVgB,CAAlB;AAaA,SAAO,UAAU,GACf,KAAA,CAAA,aAAA,CAAC,KAAK,CAAC,QAAP,EAAe,IAAf,EAAiB,SAAjB,CADe,GAGf,KAAA,CAAA,aAAA,CAAC,KAAK,CAAC,QAAP,EAAe,IAAf,EACG,KADH,EAEG,cAAc,EAFjB,CAHF;AAQD,CAxIM;AAyIP,mBAAmB,CAAC,WAApB,GAAkC,qBAAlC,C,CAEA;;AACA,oBAAoB,CAAC,mBAAD,EAAsB,UAAtB,CAApB","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { Data, Helpers } from 'victory-core';\nimport { VictoryPie } from 'victory-pie';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { ChartContainer } from '../ChartContainer';\nimport { ChartDonut } from '../ChartDonut';\nimport { ChartDonutStyles } from '../ChartTheme';\nimport { getDonutThresholdDynamicTheme, getDonutThresholdStaticTheme, getPaddingForSide } from '../ChartUtils';\nexport var ChartDonutThresholdDonutOrientation;\n(function (ChartDonutThresholdDonutOrientation) {\n    ChartDonutThresholdDonutOrientation[\"left\"] = \"left\";\n    ChartDonutThresholdDonutOrientation[\"right\"] = \"right\";\n    ChartDonutThresholdDonutOrientation[\"top\"] = \"top\";\n})(ChartDonutThresholdDonutOrientation || (ChartDonutThresholdDonutOrientation = {}));\nexport var ChartDonutThresholdLabelOrientation;\n(function (ChartDonutThresholdLabelOrientation) {\n    ChartDonutThresholdLabelOrientation[\"horizontal\"] = \"horizontal\";\n    ChartDonutThresholdLabelOrientation[\"vertical\"] = \"vertical\";\n})(ChartDonutThresholdLabelOrientation || (ChartDonutThresholdLabelOrientation = {}));\nexport var ChartDonutThresholdLabelPosition;\n(function (ChartDonutThresholdLabelPosition) {\n    ChartDonutThresholdLabelPosition[\"centroid\"] = \"centroid\";\n    ChartDonutThresholdLabelPosition[\"endAngle\"] = \"endAngle\";\n    ChartDonutThresholdLabelPosition[\"startAngle\"] = \"startAngle\";\n})(ChartDonutThresholdLabelPosition || (ChartDonutThresholdLabelPosition = {}));\nexport var ChartDonutThresholdSortOrder;\n(function (ChartDonutThresholdSortOrder) {\n    ChartDonutThresholdSortOrder[\"ascending\"] = \"ascending\";\n    ChartDonutThresholdSortOrder[\"descending\"] = \"descending\";\n})(ChartDonutThresholdSortOrder || (ChartDonutThresholdSortOrder = {}));\nexport var ChartDonutThresholdSubTitlePosition;\n(function (ChartDonutThresholdSubTitlePosition) {\n    ChartDonutThresholdSubTitlePosition[\"bottom\"] = \"bottom\";\n    ChartDonutThresholdSubTitlePosition[\"center\"] = \"center\";\n    ChartDonutThresholdSubTitlePosition[\"right\"] = \"right\";\n})(ChartDonutThresholdSubTitlePosition || (ChartDonutThresholdSubTitlePosition = {}));\nexport const ChartDonutThreshold = (_a) => {\n    var { allowTooltip = true, ariaDesc, ariaTitle, children, constrainToVisibleArea = false, containerComponent = React.createElement(ChartContainer, null), data = [], invert = false, labels = [], // Don't show any tooltip labels by default, let consumer override if needed\n    padding, radius, standalone = true, subTitlePosition = ChartDonutStyles.label.subTitlePosition, themeColor, themeVariant, x, y, \n    // destructure last\n    theme = getDonutThresholdStaticTheme(themeColor, themeVariant, invert), height = theme.pie.height, width = theme.pie.width } = _a, rest = __rest(_a, [\"allowTooltip\", \"ariaDesc\", \"ariaTitle\", \"children\", \"constrainToVisibleArea\", \"containerComponent\", \"data\", \"invert\", \"labels\", \"padding\", \"radius\", \"standalone\", \"subTitlePosition\", \"themeColor\", \"themeVariant\", \"x\", \"y\", \"theme\", \"height\", \"width\"]);\n    const defaultPadding = {\n        bottom: getPaddingForSide('bottom', padding, theme.pie.padding),\n        left: getPaddingForSide('left', padding, theme.pie.padding),\n        right: getPaddingForSide('right', padding, theme.pie.padding),\n        top: getPaddingForSide('top', padding, theme.pie.padding)\n    };\n    const chartRadius = radius ||\n        Helpers.getRadius({\n            height,\n            width,\n            padding: defaultPadding\n        });\n    // Returns computed data representing pie chart slices\n    const getComputedData = () => {\n        // Format and sort data. Sorting ensures thresholds are displayed in the correct order and simplifies calculations.\n        const datum = Data.formatData(data, Object.assign({ x, y }, rest), ['x', 'y']).sort((a, b) => a._y - b._y);\n        // Data must be offset so that the sum of all data point y-values (including the final slice) == 100.\n        const [prev, computedData] = datum.reduce((acc, dataPoint) => [\n            dataPoint._y,\n            [\n                ...acc[1],\n                {\n                    x: dataPoint._x,\n                    y: dataPoint._y - acc[0] // Must be offset by previous value\n                }\n            ]\n        ], [0, []]);\n        return [\n            ...computedData,\n            {\n                y: prev ? 100 - prev : 0\n            }\n        ];\n    };\n    // Render dynamic utilization donut cart\n    const renderChildren = () => React.Children.toArray(children).map((child, index) => {\n        if (React.isValidElement(child)) {\n            const _a = child.props, { data: childData } = _a, childProps = __rest(_a, [\"data\"]);\n            const datum = Data.formatData([childData], childProps, ['x', 'y']); // Format child data independently of this component's props\n            const dynamicTheme = childProps.theme ||\n                getDonutThresholdDynamicTheme(childProps.themeColor || themeColor, childProps.themeVariant || themeVariant);\n            return React.cloneElement(child, Object.assign({ constrainToVisibleArea, data: childData, endAngle: 360 * (datum[0]._y ? datum[0]._y / 100 : 0), height,\n                invert, key: `pf-chart-donut-threshold-child-${index}`, padding: defaultPadding, radius: chartRadius - 14, showStatic: false, standalone: false, subTitlePosition: childProps.subTitlePosition || subTitlePosition, theme: dynamicTheme, width }, childProps));\n        }\n        return child;\n    });\n    // Static threshold donut chart\n    const chart = (React.createElement(ChartDonut, Object.assign({ allowTooltip: allowTooltip, constrainToVisibleArea: constrainToVisibleArea, data: getComputedData(), height: height, key: \"pf-chart-donut-threshold\", labels: labels, padding: defaultPadding, standalone: false, theme: theme, width: width }, rest)));\n    // Clone so users can override container props\n    const container = React.cloneElement(containerComponent, Object.assign({ desc: ariaDesc, height, title: ariaTitle, width,\n        theme }, containerComponent.props), [chart, renderChildren()]);\n    return standalone ? (React.createElement(React.Fragment, null, container)) : (React.createElement(React.Fragment, null,\n        chart,\n        renderChildren()));\n};\nChartDonutThreshold.displayName = 'ChartDonutThreshold';\n// Note: VictoryPie.role must be hoisted\nhoistNonReactStatics(ChartDonutThreshold, VictoryPie);\n//# sourceMappingURL=ChartDonutThreshold.js.map"]},"metadata":{},"sourceType":"module"}