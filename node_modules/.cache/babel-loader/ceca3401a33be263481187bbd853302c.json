{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pk\\\\Desktop\\\\interview_practice\\\\eagleowl\\\\src\\\\Components\\\\IsDisabled.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport NothingToDisplay from './NothingToDisplay';\nimport { Checkbox, withStyles, makeStyles, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper } from '@material-ui/core';\nimport MaterialTable from 'material-table';\nimport { ArrowDownward } from '@material-ui/icons'; // const useStyles = makeStyles(theme => (\n//     {\n//             headingColor : {\n//                 backgroundColor :'#94b3f6',\n//             },\n//             tableRowHover: {\n//                 \"&:hover\": {\n//                         backgroundColor: \"#dad9df !important\",\n//                     }\n//             }\n//     }));\n// const StyledTableRow = withStyles((theme) => ({\n//     root: {\n//       '&:nth-of-type(odd)': {\n//         backgroundColor: '#f4f3f9',\n//       },\n//     },\n//   }))(TableRow);\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function IsDisabled() {\n  _s();\n\n  // const classes = useStyles()\n  // const [selected, setSelected] = useState([])\n  const [disabledData, setDisabledData] = useState([]);\n  const isMounted = useRef(false); // isSelected = id => selected.indexOf(id) !== -1;\n\n  async function getDisabledRecipes() {\n    try {\n      const data = await fetch('https://beta.eagleowl.in/api/v1/mock/organization/18/outlet/18/recipe/recipes/?page=1&is_disabled=true');\n      const json = await data.json();\n      setDisabledData(json.results);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  useEffect(() => {\n    getDisabledRecipes();\n  }, []);\n  useEffect(() => {\n    if (isMounted.current) {\n      console.log(disabledData);\n    } else {\n      isMounted.current = true;\n    }\n  }, [disabledData]); // handleCheckboxClick = (event, id) => {\n  //     event.stopPropagation();\n  //     console.log(\"checkbox select\");\n  //     const selectedIndex = selected.indexOf(id);\n  //     let newSelected = [];\n  //     if (selectedIndex === -1) {\n  //       newSelected = newSelected.concat(selected, id);\n  //     } else if (selectedIndex === 0) {\n  //       newSelected = newSelected.concat(selected.slice(1));\n  //     } else if (selectedIndex === selected.length - 1) {\n  //       newSelected = newSelected.concat(selected.slice(0, -1));\n  //     } else if (selectedIndex > 0) {\n  //       newSelected = newSelected.concat(\n  //         selected.slice(0, selectedIndex),\n  //         selected.slice(selectedIndex + 1)\n  //       );\n  //     }\n  // }\n  // return(\n  //     <>\n  //         {\n  //             (isMounted.current ? ( disabledData.length === 0 ? <NothingToDisplay /> : \n  //                 <TableContainer component = {Paper}>\n  //                     <Table checkboxSelection={true} aria-label = \"disabled-recipes\">\n  //                         <TableHead>\n  //                             <TableRow className = {classes.headingColor}>\n  //                                 <TableCell>NAME</TableCell>\n  //                                 <TableCell>LAST UPDATED</TableCell>\n  //                                 <TableCell>COGS</TableCell>\n  //                                 <TableCell>COST PRICE</TableCell>\n  //                                 <TableCell>SALE PRICE</TableCell>\n  //                                 <TableCell>GROSS MARGIN</TableCell>\n  //                             </TableRow>\n  //                         </TableHead>\n  //                         <TableBody>\n  //                             {\n  //                                 disabledData.map( recipe => (\n  //                                     <StyledTableRow key={recipe.id} hover className={classes.tableRowHover}>\n  //                                         <TableCell className=\"selectCheckbox\" padding=\"checkbox\">\n  //                                             <Checkbox onClick={event => this.handleCheckboxClick(event, n.id)}\n  //                                                 className=\"selectCheckbox\"\n  //                                                 checked={isSelected}\n  //                                             />\n  //                                         </TableCell>\n  //                                         <TableCell>{recipe.name}</TableCell>\n  //                                         <TableCell>{recipe.last_updated.date}</TableCell>\n  //                                         <TableCell>{recipe.cogs}</TableCell>\n  //                                         <TableCell>{recipe.cost_price}</TableCell>\n  //                                         <TableCell>{recipe.sale_price}</TableCell>\n  //                                         <TableCell>{recipe.gross_margin}</TableCell>\n  //                                     </StyledTableRow>\n  //                                 ))\n  //                             }\n  //                         </TableBody>\n  //                     </Table>\n  //                 </TableContainer>\n  //             ) : null)\n  //         }\n  //     </>\n  // )\n\n  return /*#__PURE__*/_jsxDEV(MaterialTable, {\n    title: \"Basic Selection Preview\",\n    columns: [{\n      title: 'Name',\n      field: 'name'\n    }, {\n      title: 'Surname',\n      field: 'surname'\n    }, {\n      title: 'Birth Year',\n      field: 'birthYear',\n      type: 'numeric'\n    }, {\n      title: 'Birth Place',\n      field: 'birthCity',\n      lookup: {\n        34: 'İstanbul',\n        63: 'Şanlıurfa'\n      }\n    }],\n    data: [{\n      name: 'Mehmet',\n      surname: 'Baran',\n      birthYear: 1987,\n      birthCity: 63\n    }, {\n      name: 'Zerya Betül',\n      surname: 'Baran',\n      birthYear: 2017,\n      birthCity: 34\n    }],\n    options: {\n      selection: true,\n      paging: false,\n      search: false,\n      toolbar: false\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 15\n  }, this);\n}\n\n_s(IsDisabled, \"vzXIl0RSDNIibeAxbtS6Ae9b88k=\");\n\n_c = IsDisabled;\n\nvar _c;\n\n$RefreshReg$(_c, \"IsDisabled\");","map":{"version":3,"sources":["C:/Users/pk/Desktop/interview_practice/eagleowl/src/Components/IsDisabled.js"],"names":["React","useState","useEffect","useRef","NothingToDisplay","Checkbox","withStyles","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","MaterialTable","ArrowDownward","IsDisabled","disabledData","setDisabledData","isMounted","getDisabledRecipes","data","fetch","json","results","err","console","log","current","title","field","type","lookup","name","surname","birthYear","birthCity","selection","paging","search","toolbar"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useRef} from 'react'\r\nimport NothingToDisplay from './NothingToDisplay'\r\nimport { Checkbox, withStyles, makeStyles, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper } from '@material-ui/core'\r\nimport MaterialTable from 'material-table';\r\nimport {ArrowDownward} from '@material-ui/icons';\r\n\r\n// const useStyles = makeStyles(theme => (\r\n//     {\r\n//             headingColor : {\r\n//                 backgroundColor :'#94b3f6',\r\n//             },\r\n//             tableRowHover: {\r\n//                 \"&:hover\": {\r\n//                         backgroundColor: \"#dad9df !important\",\r\n//                     }\r\n//             }\r\n//     }));\r\n\r\n\r\n// const StyledTableRow = withStyles((theme) => ({\r\n//     root: {\r\n//       '&:nth-of-type(odd)': {\r\n//         backgroundColor: '#f4f3f9',\r\n//       },\r\n//     },\r\n//   }))(TableRow);\r\n\r\nexport default function IsDisabled() {\r\n\r\n    // const classes = useStyles()\r\n    // const [selected, setSelected] = useState([])\r\n    const [disabledData, setDisabledData] = useState([])\r\n    const isMounted = useRef(false)\r\n\r\n    // isSelected = id => selected.indexOf(id) !== -1;\r\n\r\n    async function getDisabledRecipes(){\r\n        try{\r\n            const data = await fetch('https://beta.eagleowl.in/api/v1/mock/organization/18/outlet/18/recipe/recipes/?page=1&is_disabled=true')\r\n            const json = await data.json()\r\n            setDisabledData(json.results)\r\n        }\r\n        catch(err){\r\n            console.log(err)\r\n        }\r\n        \r\n    }\r\n    \r\n    useEffect(()=>{\r\n        getDisabledRecipes()\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        if(isMounted.current){\r\n            console.log(disabledData)\r\n        }\r\n        else{\r\n            isMounted.current = true\r\n        }\r\n    },[disabledData])\r\n\r\n    // handleCheckboxClick = (event, id) => {\r\n    //     event.stopPropagation();\r\n    //     console.log(\"checkbox select\");\r\n    //     const selectedIndex = selected.indexOf(id);\r\n    //     let newSelected = [];\r\n    \r\n    //     if (selectedIndex === -1) {\r\n    //       newSelected = newSelected.concat(selected, id);\r\n    //     } else if (selectedIndex === 0) {\r\n    //       newSelected = newSelected.concat(selected.slice(1));\r\n    //     } else if (selectedIndex === selected.length - 1) {\r\n    //       newSelected = newSelected.concat(selected.slice(0, -1));\r\n    //     } else if (selectedIndex > 0) {\r\n    //       newSelected = newSelected.concat(\r\n    //         selected.slice(0, selectedIndex),\r\n    //         selected.slice(selectedIndex + 1)\r\n    //       );\r\n    //     }\r\n    // }\r\n\r\n    // return(\r\n    //     <>\r\n    //         {\r\n    //             (isMounted.current ? ( disabledData.length === 0 ? <NothingToDisplay /> : \r\n    //                 <TableContainer component = {Paper}>\r\n    //                     <Table checkboxSelection={true} aria-label = \"disabled-recipes\">\r\n    //                         <TableHead>\r\n    //                             <TableRow className = {classes.headingColor}>\r\n    //                                 <TableCell>NAME</TableCell>\r\n    //                                 <TableCell>LAST UPDATED</TableCell>\r\n    //                                 <TableCell>COGS</TableCell>\r\n    //                                 <TableCell>COST PRICE</TableCell>\r\n    //                                 <TableCell>SALE PRICE</TableCell>\r\n    //                                 <TableCell>GROSS MARGIN</TableCell>\r\n    //                             </TableRow>\r\n    //                         </TableHead>\r\n    //                         <TableBody>\r\n    //                             {\r\n    //                                 disabledData.map( recipe => (\r\n    //                                     <StyledTableRow key={recipe.id} hover className={classes.tableRowHover}>\r\n    //                                         <TableCell className=\"selectCheckbox\" padding=\"checkbox\">\r\n    //                                             <Checkbox onClick={event => this.handleCheckboxClick(event, n.id)}\r\n    //                                                 className=\"selectCheckbox\"\r\n    //                                                 checked={isSelected}\r\n    //                                             />\r\n    //                                         </TableCell>\r\n    //                                         <TableCell>{recipe.name}</TableCell>\r\n    //                                         <TableCell>{recipe.last_updated.date}</TableCell>\r\n    //                                         <TableCell>{recipe.cogs}</TableCell>\r\n    //                                         <TableCell>{recipe.cost_price}</TableCell>\r\n    //                                         <TableCell>{recipe.sale_price}</TableCell>\r\n    //                                         <TableCell>{recipe.gross_margin}</TableCell>\r\n    //                                     </StyledTableRow>\r\n    //                                 ))\r\n    //                             }\r\n    //                         </TableBody>\r\n    //                     </Table>\r\n    //                 </TableContainer>\r\n    //             ) : null)\r\n    //         }\r\n    //     </>\r\n\r\n    // )\r\n\r\n    return(\r\n\r\n              <MaterialTable\r\n                title=\"Basic Selection Preview\"\r\n                columns={[\r\n                  { title: 'Name', field: 'name' },\r\n                  { title: 'Surname', field: 'surname' },\r\n                  { title: 'Birth Year', field: 'birthYear', type: 'numeric' },\r\n                  {\r\n                    title: 'Birth Place',\r\n                    field: 'birthCity',\r\n                    lookup: { 34: 'İstanbul', 63: 'Şanlıurfa' },\r\n                  },\r\n                ]}\r\n                data={[\r\n                  { name: 'Mehmet', surname: 'Baran', birthYear: 1987, birthCity: 63 },\r\n                  { name: 'Zerya Betül', surname: 'Baran', birthYear: 2017, birthCity: 34 },\r\n                ]}        \r\n                options={{\r\n                  selection: true,\r\n                  paging:false,\r\n                  search:false,\r\n                  toolbar:false,\r\n                }}\r\n              />\r\n            \r\n          \r\n    )\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}