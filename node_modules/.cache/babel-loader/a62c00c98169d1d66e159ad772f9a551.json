{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { VictoryLegend } from 'victory-legend';\nimport { ChartContainer } from '../ChartContainer';\nimport { ChartLabel } from '../ChartLabel';\nimport { ChartPoint } from '../ChartPoint';\nimport { getTheme } from '../ChartUtils';\nexport var ChartLegendOrientation;\n\n(function (ChartLegendOrientation) {\n  ChartLegendOrientation[\"horizontal\"] = \"horizontal\";\n  ChartLegendOrientation[\"vertical\"] = \"vertical\";\n})(ChartLegendOrientation || (ChartLegendOrientation = {}));\n\nexport var ChartLegendPosition;\n\n(function (ChartLegendPosition) {\n  ChartLegendPosition[\"bottom\"] = \"bottom\";\n  ChartLegendPosition[\"bottomLeft\"] = \"bottom-left\";\n  ChartLegendPosition[\"right\"] = \"right\";\n})(ChartLegendPosition || (ChartLegendPosition = {}));\n\nexport var ChartLegendRowGutter;\n\n(function (ChartLegendRowGutter) {\n  ChartLegendRowGutter[\"bottom\"] = \"bottom\";\n  ChartLegendRowGutter[\"top\"] = \"top\";\n})(ChartLegendRowGutter || (ChartLegendRowGutter = {}));\n\nexport const ChartLegend = _a => {\n  var {\n    containerComponent = React.createElement(ChartContainer, null),\n    dataComponent = React.createElement(ChartPoint, null),\n    labelComponent = React.createElement(ChartLabel, null),\n    responsive = true,\n    themeColor,\n    themeVariant,\n    titleComponent = React.createElement(ChartLabel, null),\n    // destructure last\n    theme = getTheme(themeColor, themeVariant)\n  } = _a,\n      rest = __rest(_a, [\"containerComponent\", \"dataComponent\", \"labelComponent\", \"responsive\", \"themeColor\", \"themeVariant\", \"titleComponent\", \"theme\"]); // Clone so users can override container props\n\n\n  const container = React.cloneElement(containerComponent, Object.assign({\n    responsive,\n    theme\n  }, containerComponent.props)); // Note: containerComponent is required for theme\n\n  return React.createElement(VictoryLegend, Object.assign({\n    containerComponent: container,\n    dataComponent: dataComponent,\n    labelComponent: labelComponent,\n    theme: theme,\n    titleComponent: titleComponent\n  }, rest));\n};\nChartLegend.displayName = 'ChartLegend'; // Note: VictoryLegend.role must be hoisted, but getBaseProps causes error with ChartVoronoiContainer\n\nhoistNonReactStatics(ChartLegend, VictoryLegend, {\n  getBaseProps: true\n});\n\nChartLegend.getBaseProps = props => {\n  const theme = getTheme(null, null);\n  return VictoryLegend.getBaseProps(Object.assign({\n    titleComponent: React.createElement(ChartLabel, null)\n  }, props), {\n    height: theme.chart.height,\n    orientation: theme.legend.orientation,\n    titleOrientation: theme.legend.titleOrientation,\n    x: 0,\n    y: 0,\n    width: theme.chart.width\n  });\n};","map":{"version":3,"sources":["../../../../src/components/ChartLegend/ChartLegend.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { VictoryLegend } from 'victory-legend';\nimport { ChartContainer } from '../ChartContainer';\nimport { ChartLabel } from '../ChartLabel';\nimport { ChartPoint } from '../ChartPoint';\nimport { getTheme } from '../ChartUtils';\nexport var ChartLegendOrientation;\n(function (ChartLegendOrientation) {\n    ChartLegendOrientation[\"horizontal\"] = \"horizontal\";\n    ChartLegendOrientation[\"vertical\"] = \"vertical\";\n})(ChartLegendOrientation || (ChartLegendOrientation = {}));\nexport var ChartLegendPosition;\n(function (ChartLegendPosition) {\n    ChartLegendPosition[\"bottom\"] = \"bottom\";\n    ChartLegendPosition[\"bottomLeft\"] = \"bottom-left\";\n    ChartLegendPosition[\"right\"] = \"right\";\n})(ChartLegendPosition || (ChartLegendPosition = {}));\nexport var ChartLegendRowGutter;\n(function (ChartLegendRowGutter) {\n    ChartLegendRowGutter[\"bottom\"] = \"bottom\";\n    ChartLegendRowGutter[\"top\"] = \"top\";\n})(ChartLegendRowGutter || (ChartLegendRowGutter = {}));\nexport const ChartLegend = (_a) => {\n    var { containerComponent = React.createElement(ChartContainer, null), dataComponent = React.createElement(ChartPoint, null), labelComponent = React.createElement(ChartLabel, null), responsive = true, themeColor, themeVariant, titleComponent = React.createElement(ChartLabel, null), \n    // destructure last\n    theme = getTheme(themeColor, themeVariant) } = _a, rest = __rest(_a, [\"containerComponent\", \"dataComponent\", \"labelComponent\", \"responsive\", \"themeColor\", \"themeVariant\", \"titleComponent\", \"theme\"]);\n    // Clone so users can override container props\n    const container = React.cloneElement(containerComponent, Object.assign({ responsive,\n        theme }, containerComponent.props));\n    // Note: containerComponent is required for theme\n    return (React.createElement(VictoryLegend, Object.assign({ containerComponent: container, dataComponent: dataComponent, labelComponent: labelComponent, theme: theme, titleComponent: titleComponent }, rest)));\n};\nChartLegend.displayName = 'ChartLegend';\n// Note: VictoryLegend.role must be hoisted, but getBaseProps causes error with ChartVoronoiContainer\nhoistNonReactStatics(ChartLegend, VictoryLegend, { getBaseProps: true });\nChartLegend.getBaseProps = (props) => {\n    const theme = getTheme(null, null);\n    return VictoryLegend.getBaseProps(Object.assign({ titleComponent: React.createElement(ChartLabel, null) }, props), {\n        height: theme.chart.height,\n        orientation: theme.legend.orientation,\n        titleOrientation: theme.legend.titleOrientation,\n        x: 0,\n        y: 0,\n        width: theme.chart.width\n    });\n};\n//# sourceMappingURL=ChartLegend.js.map"]},"metadata":{},"sourceType":"module"}