{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { VictoryTooltip } from 'victory-tooltip';\nimport { ChartLabel } from '../ChartLabel';\nimport { getTheme } from '../ChartUtils';\nexport const ChartTooltip = _a => {\n  var {\n    constrainToVisibleArea = false,\n    labelComponent = React.createElement(ChartLabel, null),\n    // Note that Victory provides its own label component here\n    labelTextAnchor,\n    themeColor,\n    themeVariant,\n    // destructure last\n    theme = getTheme(themeColor, themeVariant)\n  } = _a,\n      rest = __rest(_a, [\"constrainToVisibleArea\", \"labelComponent\", \"labelTextAnchor\", \"themeColor\", \"themeVariant\", \"theme\"]);\n\n  const chartLabelComponent = React.cloneElement(labelComponent, Object.assign({\n    textAnchor: labelTextAnchor,\n    theme\n  }, labelComponent.props));\n  return React.createElement(VictoryTooltip, Object.assign({\n    constrainToVisibleArea: constrainToVisibleArea,\n    labelComponent: chartLabelComponent,\n    theme: theme\n  }, rest));\n};\nChartTooltip.displayName = 'ChartTooltip'; // Note: VictoryTooltip.defaultEvents must be hoisted\n\nhoistNonReactStatics(ChartTooltip, VictoryTooltip);","map":{"version":3,"sources":["../../../../src/components/ChartTooltip/ChartTooltip.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,OAAO,oBAAP,MAAiC,yBAAjC;AASA,SAAS,cAAT,QAAoD,iBAApD;AACA,SAAS,UAAT,QAA2B,eAA3B;AAEA,SAAS,QAAT,QAAyB,eAAzB;AA0PA,OAAO,MAAM,YAAY,GAAgD,EAAD,IAUhD;MAViD;AACvE,IAAA,sBAAsB,GAAG,KAD8C;AAEvE,IAAA,cAAc,GAAG,KAAA,CAAA,aAAA,CAAC,UAAD,EAAW,IAAX,CAFsD;AAEtC;AACjC,IAAA,eAHuE;AAIvE,IAAA,UAJuE;AAKvE,IAAA,YALuE;AAOvE;AACA,IAAA,KAAK,GAAG,QAAQ,CAAC,UAAD,EAAa,YAAb;AARuD,MAQ7B,E;MACvC,IAAI,GAAA,MAAA,CAAA,EAAA,EATgE,CAAA,wBAAA,EAAA,gBAAA,EAAA,iBAAA,EAAA,YAAA,EAAA,cAAA,EAAA,OAAA,CAShE,C;;AAEP,QAAM,mBAAmB,GAAG,KAAK,CAAC,YAAN,CAAmB,cAAnB,EAAiC,MAAA,CAAA,MAAA,CAAA;AAC3D,IAAA,UAAU,EAAE,eAD+C;AAE3D,IAAA;AAF2D,GAAA,EAGxD,cAAc,CAAC,KAHyC,CAAjC,CAA5B;AAMA,SACE,KAAA,CAAA,aAAA,CAAC,cAAD,EAAe,MAAA,CAAA,MAAA,CAAA;AACb,IAAA,sBAAsB,EAAE,sBADX;AAEb,IAAA,cAAc,EAAE,mBAFH;AAGb,IAAA,KAAK,EAAE;AAHM,GAAA,EAIT,IAJS,CAAf,CADF;AAQD,CAzBM;AA0BP,YAAY,CAAC,WAAb,GAA2B,cAA3B,C,CAEA;;AACA,oBAAoB,CAAC,YAAD,EAAe,cAAf,CAApB","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { VictoryTooltip } from 'victory-tooltip';\nimport { ChartLabel } from '../ChartLabel';\nimport { getTheme } from '../ChartUtils';\nexport const ChartTooltip = (_a) => {\n    var { constrainToVisibleArea = false, labelComponent = React.createElement(ChartLabel, null), // Note that Victory provides its own label component here\n    labelTextAnchor, themeColor, themeVariant, \n    // destructure last\n    theme = getTheme(themeColor, themeVariant) } = _a, rest = __rest(_a, [\"constrainToVisibleArea\", \"labelComponent\", \"labelTextAnchor\", \"themeColor\", \"themeVariant\", \"theme\"]);\n    const chartLabelComponent = React.cloneElement(labelComponent, Object.assign({ textAnchor: labelTextAnchor, theme }, labelComponent.props));\n    return (React.createElement(VictoryTooltip, Object.assign({ constrainToVisibleArea: constrainToVisibleArea, labelComponent: chartLabelComponent, theme: theme }, rest)));\n};\nChartTooltip.displayName = 'ChartTooltip';\n// Note: VictoryTooltip.defaultEvents must be hoisted\nhoistNonReactStatics(ChartTooltip, VictoryTooltip);\n//# sourceMappingURL=ChartTooltip.js.map"]},"metadata":{},"sourceType":"module"}