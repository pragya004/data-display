{"ast":null,"code":"import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { VictoryScatter } from 'victory-scatter';\nimport { ChartContainer } from '../ChartContainer';\nimport { ChartScatterStyles } from '../ChartTheme';\nimport { getTheme } from '../ChartUtils';\nexport var ChartScatterSortOrder;\n\n(function (ChartScatterSortOrder) {\n  ChartScatterSortOrder[\"ascending\"] = \"ascending\";\n  ChartScatterSortOrder[\"descending\"] = \"descending\";\n})(ChartScatterSortOrder || (ChartScatterSortOrder = {}));\n\nexport const ChartScatter = _a => {\n  var {\n    containerComponent = React.createElement(ChartContainer, null),\n    themeColor,\n    themeVariant,\n    // destructure last\n    theme = getTheme(themeColor, themeVariant),\n    size = ({\n      active\n    }) => active ? ChartScatterStyles.activeSize : ChartScatterStyles.size\n  } = _a,\n      rest = __rest(_a, [\"containerComponent\", \"themeColor\", \"themeVariant\", \"theme\", \"size\"]); // Clone so users can override container props\n\n\n  const container = React.cloneElement(containerComponent, Object.assign({\n    theme\n  }, containerComponent.props)); // Note: containerComponent is required for theme\n\n  return React.createElement(VictoryScatter, Object.assign({\n    containerComponent: container,\n    size: size,\n    theme: theme\n  }, rest));\n};\nChartScatter.displayName = 'ChartScatter'; // Note: VictoryLine.role must be hoisted\n\nhoistNonReactStatics(ChartScatter, VictoryScatter);","map":{"version":3,"sources":["../../../../src/components/ChartScatter/ChartScatter.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,OAAO,oBAAP,MAAiC,yBAAjC;AAoBA,SAAS,cAAT,QAA+E,iBAA/E;AACA,SAAS,cAAT,QAA+B,mBAA/B;AACA,SAAS,kBAAT,QAAyD,eAAzD;AACA,SAAS,QAAT,QAAyB,eAAzB;AAEA,OAAA,IAAY,qBAAZ;;AAAA,CAAA,UAAY,qBAAZ,EAAiC;AAC/B,EAAA,qBAAA,CAAA,WAAA,CAAA,GAAA,WAAA;AACA,EAAA,qBAAA,CAAA,YAAA,CAAA,GAAA,YAAA;AACD,CAHD,EAAY,qBAAqB,KAArB,qBAAqB,GAAA,EAAA,CAAjC;;AAyaA,OAAO,MAAM,YAAY,GAAgD,EAAD,IAShD;MATiD;AACvE,IAAA,kBAAkB,GAAG,KAAA,CAAA,aAAA,CAAC,cAAD,EAAe,IAAf,CADkD;AAEvE,IAAA,UAFuE;AAGvE,IAAA,YAHuE;AAKvE;AACA,IAAA,KAAK,GAAG,QAAQ,CAAC,UAAD,EAAa,YAAb,CANuD;AAOvE,IAAA,IAAI,GAAG,CAAC;AAAE,MAAA;AAAF,KAAD,KAAiB,MAAM,GAAG,kBAAkB,CAAC,UAAtB,GAAmC,kBAAkB,CAAC;AAPb,MAOkB,E;MACtF,IAAI,GAAA,MAAA,CAAA,EAAA,EARgE,CAAA,oBAAA,EAAA,YAAA,EAAA,cAAA,EAAA,OAAA,EAAA,MAAA,CAQhE,C,CACe,CACtB;;;AACA,QAAM,SAAS,GAAG,KAAK,CAAC,YAAN,CAAmB,kBAAnB,EAAqC,MAAA,CAAA,MAAA,CAAA;AACrD,IAAA;AADqD,GAAA,EAElD,kBAAkB,CAAC,KAF+B,CAArC,CAAlB,CAFsB,CAOtB;;AACA,SAAO,KAAA,CAAA,aAAA,CAAC,cAAD,EAAe,MAAA,CAAA,MAAA,CAAA;AAAC,IAAA,kBAAkB,EAAE,SAArB;AAAgC,IAAA,IAAI,EAAE,IAAtC;AAA4C,IAAA,KAAK,EAAE;AAAnD,GAAA,EAA8D,IAA9D,CAAf,CAAP;AACD,CAlBM;AAmBP,YAAY,CAAC,WAAb,GAA2B,cAA3B,C,CAEA;;AACA,oBAAoB,CAAC,YAAD,EAAe,cAAf,CAApB","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { VictoryScatter } from 'victory-scatter';\nimport { ChartContainer } from '../ChartContainer';\nimport { ChartScatterStyles } from '../ChartTheme';\nimport { getTheme } from '../ChartUtils';\nexport var ChartScatterSortOrder;\n(function (ChartScatterSortOrder) {\n    ChartScatterSortOrder[\"ascending\"] = \"ascending\";\n    ChartScatterSortOrder[\"descending\"] = \"descending\";\n})(ChartScatterSortOrder || (ChartScatterSortOrder = {}));\nexport const ChartScatter = (_a) => {\n    var { containerComponent = React.createElement(ChartContainer, null), themeColor, themeVariant, \n    // destructure last\n    theme = getTheme(themeColor, themeVariant), size = ({ active }) => (active ? ChartScatterStyles.activeSize : ChartScatterStyles.size) } = _a, rest = __rest(_a, [\"containerComponent\", \"themeColor\", \"themeVariant\", \"theme\", \"size\"]);\n    // Clone so users can override container props\n    const container = React.cloneElement(containerComponent, Object.assign({ theme }, containerComponent.props));\n    // Note: containerComponent is required for theme\n    return React.createElement(VictoryScatter, Object.assign({ containerComponent: container, size: size, theme: theme }, rest));\n};\nChartScatter.displayName = 'ChartScatter';\n// Note: VictoryLine.role must be hoisted\nhoistNonReactStatics(ChartScatter, VictoryScatter);\n//# sourceMappingURL=ChartScatter.js.map"]},"metadata":{},"sourceType":"module"}