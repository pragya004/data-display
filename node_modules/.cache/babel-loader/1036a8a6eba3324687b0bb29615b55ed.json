{"ast":null,"code":"import * as React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { VictoryChart } from 'victory-chart';\nimport { getComparativeMeasureErrorWidth, getComparativeMeasureWidth, getComparativeMeasureWarningWidth, getPrimaryDotMeasureSize, getPrimarySegmentedMeasureWidth, getQualitativeRangeBarWidth } from './utils/chart-bullet-size';\nimport { getBulletDomain } from './utils/chart-bullet-domain';\nimport { getBulletThemeWithLegendColorScale } from './utils/chart-bullet-theme';\nimport { ChartAxis } from '../ChartAxis';\nimport { ChartBulletComparativeErrorMeasure } from './ChartBulletComparativeErrorMeasure';\nimport { ChartBulletComparativeMeasure } from './ChartBulletComparativeMeasure';\nimport { ChartBulletComparativeWarningMeasure } from './ChartBulletComparativeWarningMeasure';\nimport { ChartBulletGroupTitle } from './ChartBulletGroupTitle';\nimport { ChartBulletPrimaryDotMeasure } from './ChartBulletPrimaryDotMeasure';\nimport { ChartBulletPrimarySegmentedMeasure } from './ChartBulletPrimarySegmentedMeasure';\nimport { ChartBulletQualitativeRange } from './ChartBulletQualitativeRange';\nimport { ChartBulletTitle } from './ChartBulletTitle';\nimport { ChartContainer } from '../ChartContainer';\nimport { ChartLegend, ChartLegendPosition } from '../ChartLegend';\nimport { ChartBulletStyles } from '../ChartTheme';\nimport { ChartTooltip } from '../ChartTooltip';\nimport { getComputedLegend, getPaddingForSide } from '../ChartUtils';\nexport const ChartBullet = ({\n  allowTooltip = true,\n  ariaDesc,\n  ariaTitle,\n  axisComponent = React.createElement(ChartAxis, null),\n  comparativeErrorMeasureComponent = React.createElement(ChartBulletComparativeErrorMeasure, null),\n  comparativeErrorMeasureData,\n  comparativeErrorMeasureDataY,\n  comparativeErrorMeasureLegendData,\n  comparativeWarningMeasureComponent = React.createElement(ChartBulletComparativeWarningMeasure, null),\n  comparativeWarningMeasureData,\n  comparativeWarningMeasureDataY,\n  comparativeWarningMeasureLegendData,\n  comparativeZeroMeasureComponent = React.createElement(ChartBulletComparativeMeasure, null),\n  constrainToVisibleArea = false,\n  groupTitleComponent = React.createElement(ChartBulletGroupTitle, null),\n  groupSubTitle,\n  groupTitle,\n  horizontal = true,\n  invert = false,\n  labels,\n  legendAllowWrap = false,\n  legendComponent = React.createElement(ChartLegend, null),\n  legendItemsPerRow,\n  legendPosition = 'bottom',\n  maxDomain,\n  minDomain,\n  padding,\n  primaryDotMeasureComponent = React.createElement(ChartBulletPrimaryDotMeasure, null),\n  primaryDotMeasureData,\n  primaryDotMeasureDataY,\n  primaryDotMeasureLegendData,\n  primarySegmentedMeasureComponent = React.createElement(ChartBulletPrimarySegmentedMeasure, null),\n  primarySegmentedMeasureData,\n  primarySegmentedMeasureDataY,\n  primarySegmentedMeasureLegendData,\n  qualitativeRangeComponent = React.createElement(ChartBulletQualitativeRange, null),\n  qualitativeRangeData,\n  qualitativeRangeDataY,\n  qualitativeRangeDataY0,\n  qualitativeRangeLegendData,\n  standalone = true,\n  subTitle,\n  themeColor,\n  themeVariant,\n  title,\n  titleComponent = React.createElement(ChartBulletTitle, null),\n  titlePosition,\n  // destructure last\n  theme = getBulletThemeWithLegendColorScale({\n    comparativeErrorMeasureData,\n    comparativeErrorMeasureLegendData,\n    comparativeWarningMeasureData,\n    comparativeWarningMeasureLegendData,\n    invert,\n    primaryDotMeasureData,\n    primaryDotMeasureLegendData,\n    primarySegmentedMeasureData,\n    primarySegmentedMeasureLegendData,\n    qualitativeRangeData,\n    qualitativeRangeLegendData,\n    themeColor,\n    themeVariant\n  }),\n  domain = getBulletDomain({\n    comparativeErrorMeasureComponent,\n    comparativeErrorMeasureData,\n    comparativeWarningMeasureComponent,\n    comparativeWarningMeasureData,\n    maxDomain,\n    minDomain,\n    primaryDotMeasureComponent,\n    primaryDotMeasureData,\n    primarySegmentedMeasureComponent,\n    primarySegmentedMeasureData,\n    qualitativeRangeComponent,\n    qualitativeRangeData\n  }),\n  legendOrientation = theme.legend.orientation,\n  height = horizontal ? theme.chart.height : theme.chart.width,\n  width = horizontal ? theme.chart.width : theme.chart.height,\n  bulletSize = theme.chart.height\n}) => {\n  // Note that we're using a fixed bullet height width to align components.\n  const chartSize = {\n    height: horizontal ? bulletSize : height,\n    width: horizontal ? width : bulletSize\n  };\n  const defaultPadding = {\n    bottom: getPaddingForSide('bottom', padding, theme.chart.padding),\n    left: getPaddingForSide('left', padding, theme.chart.padding),\n    right: getPaddingForSide('right', padding, theme.chart.padding),\n    top: getPaddingForSide('top', padding, theme.chart.padding)\n  }; // Bullet group title\n\n  const bulletGroupTitle = React.cloneElement(groupTitleComponent, Object.assign({\n    height,\n    standalone: false,\n    subTitle: groupSubTitle,\n    title: groupTitle,\n    width\n  }, groupTitleComponent.props)); // Bullet title\n\n  const bulletTitle = React.cloneElement(titleComponent, Object.assign({\n    height,\n    horizontal,\n    legendPosition,\n    padding,\n    standalone: false,\n    subTitle,\n    theme,\n    title,\n    titlePosition,\n    width\n  }, titleComponent.props)); // Comparative error measure\n\n  const comparativeErrorMeasure = React.cloneElement(comparativeErrorMeasureComponent, Object.assign({\n    allowTooltip,\n    barWidth: getComparativeMeasureErrorWidth({\n      height: chartSize.height,\n      horizontal,\n      width: chartSize.width\n    }),\n    constrainToVisibleArea,\n    data: comparativeErrorMeasureData,\n    domain,\n    height: chartSize.height,\n    horizontal,\n    labelComponent: allowTooltip ? React.createElement(ChartTooltip, {\n      height: height,\n      theme: theme,\n      width: width\n    }) : undefined,\n    labels,\n    padding,\n    standalone: false,\n    width: chartSize.width,\n    y: comparativeErrorMeasureDataY\n  }, comparativeErrorMeasureComponent.props)); // Comparative warning measure\n\n  const comparativeWarningMeasure = React.cloneElement(comparativeWarningMeasureComponent, Object.assign({\n    allowTooltip,\n    barWidth: getComparativeMeasureWarningWidth({\n      height: chartSize.height,\n      horizontal,\n      width: chartSize.width\n    }),\n    constrainToVisibleArea,\n    data: comparativeWarningMeasureData,\n    domain,\n    height: chartSize.height,\n    horizontal,\n    labelComponent: allowTooltip ? React.createElement(ChartTooltip, {\n      height: height,\n      theme: theme,\n      width: width\n    }) : undefined,\n    labels,\n    padding,\n    standalone: false,\n    width: chartSize.width,\n    y: comparativeWarningMeasureDataY\n  }, comparativeWarningMeasureComponent.props)); // Comparative zero measure\n\n  const comparativeZeroMeasure = React.cloneElement(comparativeZeroMeasureComponent, Object.assign({\n    barWidth: getComparativeMeasureWidth({\n      height: chartSize.height,\n      horizontal,\n      width: chartSize.width\n    }),\n    data: [{\n      y: 0\n    }],\n    domain,\n    height: chartSize.height,\n    horizontal,\n    padding,\n    standalone: false,\n    width: chartSize.width\n  }, comparativeZeroMeasureComponent.props)); // Legend\n\n  const legend = React.cloneElement(legendComponent, Object.assign({\n    data: [...(primaryDotMeasureLegendData ? primaryDotMeasureLegendData : []), ...(primarySegmentedMeasureLegendData ? primarySegmentedMeasureLegendData : []), ...(comparativeWarningMeasureLegendData ? comparativeWarningMeasureLegendData : []), ...(comparativeErrorMeasureLegendData ? comparativeErrorMeasureLegendData : []), ...(qualitativeRangeLegendData ? qualitativeRangeLegendData : [])],\n    itemsPerRow: legendItemsPerRow,\n    orientation: legendOrientation,\n    position: legendPosition,\n    theme\n  }, legendComponent.props)); // Primary dot measure\n\n  const primaryDotMeasure = React.cloneElement(primaryDotMeasureComponent, Object.assign({\n    allowTooltip,\n    constrainToVisibleArea,\n    data: primaryDotMeasureData,\n    domain,\n    height: chartSize.height,\n    horizontal,\n    invert,\n    labelComponent: allowTooltip ? React.createElement(ChartTooltip, {\n      height: height,\n      theme: theme,\n      width: width\n    }) : undefined,\n    labels,\n    padding,\n    size: getPrimaryDotMeasureSize({\n      height: chartSize.height,\n      horizontal,\n      width: chartSize.width\n    }),\n    standalone: false,\n    themeColor,\n    themeVariant,\n    width: chartSize.width,\n    y: primaryDotMeasureDataY\n  }, primaryDotMeasureComponent.props)); // Primary segmented measure\n\n  const primarySegmentedMeasure = React.cloneElement(primarySegmentedMeasureComponent, Object.assign({\n    allowTooltip,\n    constrainToVisibleArea,\n    barWidth: getPrimarySegmentedMeasureWidth({\n      height: chartSize.height,\n      horizontal,\n      width: chartSize.width\n    }),\n    data: primarySegmentedMeasureData,\n    domain,\n    height: chartSize.height,\n    horizontal,\n    invert,\n    labelComponent: allowTooltip ? React.createElement(ChartTooltip, {\n      height: height,\n      theme: theme,\n      width: width\n    }) : undefined,\n    labels,\n    padding,\n    standalone: false,\n    themeColor,\n    themeVariant,\n    width: chartSize.width,\n    y: primarySegmentedMeasureDataY\n  }, primarySegmentedMeasureComponent.props)); // Qualitative range\n\n  const qualitativeRange = React.cloneElement(qualitativeRangeComponent, Object.assign({\n    allowTooltip,\n    constrainToVisibleArea,\n    barWidth: getQualitativeRangeBarWidth({\n      height: chartSize.height,\n      horizontal,\n      width: chartSize.width\n    }),\n    data: qualitativeRangeData,\n    domain,\n    height: chartSize.height,\n    horizontal,\n    invert,\n    labelComponent: allowTooltip ? React.createElement(ChartTooltip, {\n      height: height,\n      theme: theme,\n      width: width\n    }) : undefined,\n    labels,\n    padding,\n    standalone: false,\n    width: chartSize.width,\n    y: qualitativeRangeDataY,\n    y0: qualitativeRangeDataY0\n  }, qualitativeRangeComponent.props)); // Returns tick values -- Victory doesn't include min/max domain\n\n  const getTickValues = (minVal, maxVal) => {\n    const tickValues = [minVal, maxVal];\n    let range = 0;\n\n    if (minVal < 0 && maxVal < 0) {\n      range = Math.abs(minVal - maxVal);\n    } else if (minVal < 0) {\n      range = Math.abs(minVal) + maxVal;\n    } else {\n      range = maxVal - minVal;\n    }\n\n    const tickInterval = range / (ChartBulletStyles.axisTickCount - 1);\n\n    for (let i = minVal; i < maxVal;) {\n      i += tickInterval;\n      tickValues.push(Math.ceil(i));\n    }\n\n    return tickValues;\n  }; // Returns a computed legend\n\n\n  const getLegend = () => {\n    if (!legend.props.data) {\n      return null;\n    }\n\n    let dx = 0;\n    let dy = 0; // Adjust for padding\n\n    if (legendPosition === ChartLegendPosition.bottom) {\n      if (horizontal) {\n        dy = defaultPadding.top * 0.5 + (defaultPadding.bottom * 0.5 - defaultPadding.bottom) - 25;\n      } else if (title) {\n        dy = -defaultPadding.bottom + 60;\n      } else {\n        dy = -defaultPadding.bottom;\n      }\n    } else if (legendPosition === ChartLegendPosition.bottomLeft) {\n      if (horizontal) {\n        dy = defaultPadding.top * 0.5 + (defaultPadding.bottom * 0.5 - defaultPadding.bottom) - 25;\n      } else if (title) {\n        dy = -defaultPadding.bottom + 60;\n      } else {\n        dy = -defaultPadding.bottom;\n      }\n\n      dx = -10;\n    }\n\n    return getComputedLegend({\n      allowWrap: legendAllowWrap,\n      chartType: 'bullet',\n      dx,\n      dy,\n      height: chartSize.height,\n      legendComponent: legend,\n      padding: defaultPadding,\n      position: legendPosition,\n      theme,\n      width: chartSize.width\n    });\n  }; // Returns comparative zero measure\n\n\n  const getComparativeZeroMeasure = () => {\n    const _domain = domain;\n    let low = 0;\n\n    if (Array.isArray(_domain)) {\n      low = _domain[0];\n    } else if (_domain.y && Array.isArray(_domain.y)) {\n      low = _domain.y[0];\n    }\n\n    let high = 0;\n\n    if (Array.isArray(_domain)) {\n      high = _domain[_domain.length - 1];\n    } else if (_domain.y && Array.isArray(_domain.y)) {\n      high = _domain.y[_domain.y.length - 1];\n    }\n\n    if (low < 0 && high > 0) {\n      return comparativeZeroMeasure;\n    }\n\n    return null;\n  }; // Axis component for custom tick values\n\n\n  const axis = React.cloneElement(axisComponent, Object.assign({\n    dependentAxis: horizontal ? false : true,\n    domain: !horizontal ? domain : {\n      x: domain.y,\n      y: domain.x\n    },\n    height: chartSize.height,\n    // Adjust for padding\n    offsetX: !horizontal ? defaultPadding.left * 0.5 + (defaultPadding.right * 0.5 - (defaultPadding.right - 55)) : 0,\n    offsetY: horizontal ? 80 - defaultPadding.top * 0.5 + (defaultPadding.bottom * 0.5 - 25) : 0,\n    padding,\n    standalone: false,\n    tickCount: ChartBulletStyles.axisTickCount,\n    tickValues: getTickValues(domain.y[0], domain.y[1]),\n    width: chartSize.width\n  }, axisComponent.props));\n  const bulletChart = React.createElement(React.Fragment, null, axis, bulletGroupTitle, bulletTitle, qualitativeRange, primarySegmentedMeasure, primaryDotMeasure, comparativeErrorMeasure, comparativeWarningMeasure, getComparativeZeroMeasure(), getLegend());\n  return standalone ? React.createElement(ChartContainer, {\n    desc: ariaDesc,\n    height: height,\n    title: ariaTitle,\n    theme: theme,\n    width: width\n  }, bulletChart) : React.createElement(React.Fragment, null, bulletChart);\n};\nChartBullet.displayName = 'ChartBullet';\nhoistNonReactStatics(ChartBullet, VictoryChart);","map":{"version":3,"sources":["../../../../src/components/ChartBullet/ChartBullet.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import * as React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { VictoryChart } from 'victory-chart';\nimport { getComparativeMeasureErrorWidth, getComparativeMeasureWidth, getComparativeMeasureWarningWidth, getPrimaryDotMeasureSize, getPrimarySegmentedMeasureWidth, getQualitativeRangeBarWidth } from './utils/chart-bullet-size';\nimport { getBulletDomain } from './utils/chart-bullet-domain';\nimport { getBulletThemeWithLegendColorScale } from './utils/chart-bullet-theme';\nimport { ChartAxis } from '../ChartAxis';\nimport { ChartBulletComparativeErrorMeasure } from './ChartBulletComparativeErrorMeasure';\nimport { ChartBulletComparativeMeasure } from './ChartBulletComparativeMeasure';\nimport { ChartBulletComparativeWarningMeasure } from './ChartBulletComparativeWarningMeasure';\nimport { ChartBulletGroupTitle } from './ChartBulletGroupTitle';\nimport { ChartBulletPrimaryDotMeasure } from './ChartBulletPrimaryDotMeasure';\nimport { ChartBulletPrimarySegmentedMeasure } from './ChartBulletPrimarySegmentedMeasure';\nimport { ChartBulletQualitativeRange } from './ChartBulletQualitativeRange';\nimport { ChartBulletTitle } from './ChartBulletTitle';\nimport { ChartContainer } from '../ChartContainer';\nimport { ChartLegend, ChartLegendPosition } from '../ChartLegend';\nimport { ChartBulletStyles } from '../ChartTheme';\nimport { ChartTooltip } from '../ChartTooltip';\nimport { getComputedLegend, getPaddingForSide } from '../ChartUtils';\nexport const ChartBullet = ({ allowTooltip = true, ariaDesc, ariaTitle, axisComponent = React.createElement(ChartAxis, null), comparativeErrorMeasureComponent = React.createElement(ChartBulletComparativeErrorMeasure, null), comparativeErrorMeasureData, comparativeErrorMeasureDataY, comparativeErrorMeasureLegendData, comparativeWarningMeasureComponent = React.createElement(ChartBulletComparativeWarningMeasure, null), comparativeWarningMeasureData, comparativeWarningMeasureDataY, comparativeWarningMeasureLegendData, comparativeZeroMeasureComponent = React.createElement(ChartBulletComparativeMeasure, null), constrainToVisibleArea = false, groupTitleComponent = React.createElement(ChartBulletGroupTitle, null), groupSubTitle, groupTitle, horizontal = true, invert = false, labels, legendAllowWrap = false, legendComponent = React.createElement(ChartLegend, null), legendItemsPerRow, legendPosition = 'bottom', maxDomain, minDomain, padding, primaryDotMeasureComponent = React.createElement(ChartBulletPrimaryDotMeasure, null), primaryDotMeasureData, primaryDotMeasureDataY, primaryDotMeasureLegendData, primarySegmentedMeasureComponent = React.createElement(ChartBulletPrimarySegmentedMeasure, null), primarySegmentedMeasureData, primarySegmentedMeasureDataY, primarySegmentedMeasureLegendData, qualitativeRangeComponent = React.createElement(ChartBulletQualitativeRange, null), qualitativeRangeData, qualitativeRangeDataY, qualitativeRangeDataY0, qualitativeRangeLegendData, standalone = true, subTitle, themeColor, themeVariant, title, titleComponent = React.createElement(ChartBulletTitle, null), titlePosition, \n// destructure last\ntheme = getBulletThemeWithLegendColorScale({\n    comparativeErrorMeasureData,\n    comparativeErrorMeasureLegendData,\n    comparativeWarningMeasureData,\n    comparativeWarningMeasureLegendData,\n    invert,\n    primaryDotMeasureData,\n    primaryDotMeasureLegendData,\n    primarySegmentedMeasureData,\n    primarySegmentedMeasureLegendData,\n    qualitativeRangeData,\n    qualitativeRangeLegendData,\n    themeColor,\n    themeVariant\n}), domain = getBulletDomain({\n    comparativeErrorMeasureComponent,\n    comparativeErrorMeasureData,\n    comparativeWarningMeasureComponent,\n    comparativeWarningMeasureData,\n    maxDomain,\n    minDomain,\n    primaryDotMeasureComponent,\n    primaryDotMeasureData,\n    primarySegmentedMeasureComponent,\n    primarySegmentedMeasureData,\n    qualitativeRangeComponent,\n    qualitativeRangeData\n}), legendOrientation = theme.legend.orientation, height = horizontal ? theme.chart.height : theme.chart.width, width = horizontal ? theme.chart.width : theme.chart.height, bulletSize = theme.chart.height }) => {\n    // Note that we're using a fixed bullet height width to align components.\n    const chartSize = {\n        height: horizontal ? bulletSize : height,\n        width: horizontal ? width : bulletSize\n    };\n    const defaultPadding = {\n        bottom: getPaddingForSide('bottom', padding, theme.chart.padding),\n        left: getPaddingForSide('left', padding, theme.chart.padding),\n        right: getPaddingForSide('right', padding, theme.chart.padding),\n        top: getPaddingForSide('top', padding, theme.chart.padding)\n    };\n    // Bullet group title\n    const bulletGroupTitle = React.cloneElement(groupTitleComponent, Object.assign({ height, standalone: false, subTitle: groupSubTitle, title: groupTitle, width }, groupTitleComponent.props));\n    // Bullet title\n    const bulletTitle = React.cloneElement(titleComponent, Object.assign({ height,\n        horizontal,\n        legendPosition,\n        padding, standalone: false, subTitle,\n        theme,\n        title,\n        titlePosition,\n        width }, titleComponent.props));\n    // Comparative error measure\n    const comparativeErrorMeasure = React.cloneElement(comparativeErrorMeasureComponent, Object.assign({ allowTooltip, barWidth: getComparativeMeasureErrorWidth({ height: chartSize.height, horizontal, width: chartSize.width }), constrainToVisibleArea, data: comparativeErrorMeasureData, domain, height: chartSize.height, horizontal, labelComponent: allowTooltip ? React.createElement(ChartTooltip, { height: height, theme: theme, width: width }) : undefined, labels,\n        padding, standalone: false, width: chartSize.width, y: comparativeErrorMeasureDataY }, comparativeErrorMeasureComponent.props));\n    // Comparative warning measure\n    const comparativeWarningMeasure = React.cloneElement(comparativeWarningMeasureComponent, Object.assign({ allowTooltip, barWidth: getComparativeMeasureWarningWidth({ height: chartSize.height, horizontal, width: chartSize.width }), constrainToVisibleArea, data: comparativeWarningMeasureData, domain, height: chartSize.height, horizontal, labelComponent: allowTooltip ? React.createElement(ChartTooltip, { height: height, theme: theme, width: width }) : undefined, labels,\n        padding, standalone: false, width: chartSize.width, y: comparativeWarningMeasureDataY }, comparativeWarningMeasureComponent.props));\n    // Comparative zero measure\n    const comparativeZeroMeasure = React.cloneElement(comparativeZeroMeasureComponent, Object.assign({ barWidth: getComparativeMeasureWidth({ height: chartSize.height, horizontal, width: chartSize.width }), data: [{ y: 0 }], domain, height: chartSize.height, horizontal,\n        padding, standalone: false, width: chartSize.width }, comparativeZeroMeasureComponent.props));\n    // Legend\n    const legend = React.cloneElement(legendComponent, Object.assign({ data: [\n            ...(primaryDotMeasureLegendData ? primaryDotMeasureLegendData : []),\n            ...(primarySegmentedMeasureLegendData ? primarySegmentedMeasureLegendData : []),\n            ...(comparativeWarningMeasureLegendData ? comparativeWarningMeasureLegendData : []),\n            ...(comparativeErrorMeasureLegendData ? comparativeErrorMeasureLegendData : []),\n            ...(qualitativeRangeLegendData ? qualitativeRangeLegendData : [])\n        ], itemsPerRow: legendItemsPerRow, orientation: legendOrientation, position: legendPosition, theme }, legendComponent.props));\n    // Primary dot measure\n    const primaryDotMeasure = React.cloneElement(primaryDotMeasureComponent, Object.assign({ allowTooltip,\n        constrainToVisibleArea, data: primaryDotMeasureData, domain, height: chartSize.height, horizontal,\n        invert, labelComponent: allowTooltip ? React.createElement(ChartTooltip, { height: height, theme: theme, width: width }) : undefined, labels,\n        padding, size: getPrimaryDotMeasureSize({ height: chartSize.height, horizontal, width: chartSize.width }), standalone: false, themeColor,\n        themeVariant, width: chartSize.width, y: primaryDotMeasureDataY }, primaryDotMeasureComponent.props));\n    // Primary segmented measure\n    const primarySegmentedMeasure = React.cloneElement(primarySegmentedMeasureComponent, Object.assign({ allowTooltip,\n        constrainToVisibleArea, barWidth: getPrimarySegmentedMeasureWidth({ height: chartSize.height, horizontal, width: chartSize.width }), data: primarySegmentedMeasureData, domain, height: chartSize.height, horizontal,\n        invert, labelComponent: allowTooltip ? React.createElement(ChartTooltip, { height: height, theme: theme, width: width }) : undefined, labels,\n        padding, standalone: false, themeColor,\n        themeVariant, width: chartSize.width, y: primarySegmentedMeasureDataY }, primarySegmentedMeasureComponent.props));\n    // Qualitative range\n    const qualitativeRange = React.cloneElement(qualitativeRangeComponent, Object.assign({ allowTooltip,\n        constrainToVisibleArea, barWidth: getQualitativeRangeBarWidth({ height: chartSize.height, horizontal, width: chartSize.width }), data: qualitativeRangeData, domain, height: chartSize.height, horizontal,\n        invert, labelComponent: allowTooltip ? React.createElement(ChartTooltip, { height: height, theme: theme, width: width }) : undefined, labels,\n        padding, standalone: false, width: chartSize.width, y: qualitativeRangeDataY, y0: qualitativeRangeDataY0 }, qualitativeRangeComponent.props));\n    // Returns tick values -- Victory doesn't include min/max domain\n    const getTickValues = (minVal, maxVal) => {\n        const tickValues = [minVal, maxVal];\n        let range = 0;\n        if (minVal < 0 && maxVal < 0) {\n            range = Math.abs(minVal - maxVal);\n        }\n        else if (minVal < 0) {\n            range = Math.abs(minVal) + maxVal;\n        }\n        else {\n            range = maxVal - minVal;\n        }\n        const tickInterval = range / (ChartBulletStyles.axisTickCount - 1);\n        for (let i = minVal; i < maxVal;) {\n            i += tickInterval;\n            tickValues.push(Math.ceil(i));\n        }\n        return tickValues;\n    };\n    // Returns a computed legend\n    const getLegend = () => {\n        if (!legend.props.data) {\n            return null;\n        }\n        let dx = 0;\n        let dy = 0;\n        // Adjust for padding\n        if (legendPosition === ChartLegendPosition.bottom) {\n            if (horizontal) {\n                dy = defaultPadding.top * 0.5 + (defaultPadding.bottom * 0.5 - defaultPadding.bottom) - 25;\n            }\n            else if (title) {\n                dy = -defaultPadding.bottom + 60;\n            }\n            else {\n                dy = -defaultPadding.bottom;\n            }\n        }\n        else if (legendPosition === ChartLegendPosition.bottomLeft) {\n            if (horizontal) {\n                dy = defaultPadding.top * 0.5 + (defaultPadding.bottom * 0.5 - defaultPadding.bottom) - 25;\n            }\n            else if (title) {\n                dy = -defaultPadding.bottom + 60;\n            }\n            else {\n                dy = -defaultPadding.bottom;\n            }\n            dx = -10;\n        }\n        return getComputedLegend({\n            allowWrap: legendAllowWrap,\n            chartType: 'bullet',\n            dx,\n            dy,\n            height: chartSize.height,\n            legendComponent: legend,\n            padding: defaultPadding,\n            position: legendPosition,\n            theme,\n            width: chartSize.width\n        });\n    };\n    // Returns comparative zero measure\n    const getComparativeZeroMeasure = () => {\n        const _domain = domain;\n        let low = 0;\n        if (Array.isArray(_domain)) {\n            low = _domain[0];\n        }\n        else if (_domain.y && Array.isArray(_domain.y)) {\n            low = _domain.y[0];\n        }\n        let high = 0;\n        if (Array.isArray(_domain)) {\n            high = _domain[_domain.length - 1];\n        }\n        else if (_domain.y && Array.isArray(_domain.y)) {\n            high = _domain.y[_domain.y.length - 1];\n        }\n        if (low < 0 && high > 0) {\n            return comparativeZeroMeasure;\n        }\n        return null;\n    };\n    // Axis component for custom tick values\n    const axis = React.cloneElement(axisComponent, Object.assign({ dependentAxis: horizontal ? false : true, domain: !horizontal\n            ? domain\n            : {\n                x: domain.y,\n                y: domain.x\n            }, height: chartSize.height, \n        // Adjust for padding\n        offsetX: !horizontal ? defaultPadding.left * 0.5 + (defaultPadding.right * 0.5 - (defaultPadding.right - 55)) : 0, offsetY: horizontal ? 80 - defaultPadding.top * 0.5 + (defaultPadding.bottom * 0.5 - 25) : 0, padding, standalone: false, tickCount: ChartBulletStyles.axisTickCount, tickValues: getTickValues(domain.y[0], domain.y[1]), width: chartSize.width }, axisComponent.props));\n    const bulletChart = (React.createElement(React.Fragment, null,\n        axis,\n        bulletGroupTitle,\n        bulletTitle,\n        qualitativeRange,\n        primarySegmentedMeasure,\n        primaryDotMeasure,\n        comparativeErrorMeasure,\n        comparativeWarningMeasure,\n        getComparativeZeroMeasure(),\n        getLegend()));\n    return standalone ? (React.createElement(ChartContainer, { desc: ariaDesc, height: height, title: ariaTitle, theme: theme, width: width }, bulletChart)) : (React.createElement(React.Fragment, null, bulletChart));\n};\nChartBullet.displayName = 'ChartBullet';\nhoistNonReactStatics(ChartBullet, VictoryChart);\n//# sourceMappingURL=ChartBullet.js.map"]},"metadata":{},"sourceType":"module"}