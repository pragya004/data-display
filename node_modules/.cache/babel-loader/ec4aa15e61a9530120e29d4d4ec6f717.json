{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pk\\\\Desktop\\\\interview_practice\\\\eagleowl\\\\src\\\\Components\\\\AllRecipes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AllRecipes() {\n  _s();\n\n  const [recipeData, setRecipeData] = useState([]);\n  const isMounted = useRef(false);\n\n  async function getAllRecipes() {\n    try {\n      const data = await fetch('https://beta.eagleowl.in/api/v1/mock/organization/18/outlet/18/recipe/recipes/?page=1');\n      const json = await data.json();\n      setRecipeData(json.results);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  useEffect(() => {\n    getAllRecipes();\n  }, []);\n  useEffect(() => {\n    if (isMounted.current) {\n      console.log(recipeData);\n    } else {\n      isMounted.current = true;\n    }\n  }, [recipeData]);\n\n  if (isMounted.current) {\n    recipeData.map(recipe => {\n      // return(\n      //     <div key={recipe.id}>\n      //         <p>{recipe.name}</p>\n      //     </div>\n      //     )\n      console.log(recipe);\n    });\n  } // else{\n  //     return(\n  //         <div>loading</div>\n  //     )\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AllRecipes, \"85n2VdLSQLhRJrjA63IKebglOqQ=\");\n\n_c = AllRecipes;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllRecipes\");","map":{"version":3,"sources":["C:/Users/pk/Desktop/interview_practice/eagleowl/src/Components/AllRecipes.js"],"names":["React","useState","useEffect","useRef","AllRecipes","recipeData","setRecipeData","isMounted","getAllRecipes","data","fetch","json","results","err","console","log","current","map","recipe"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,SAAxB,EAAmCC,MAAnC,QAAgD,OAAhD;;AAEA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AAEjC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAMM,SAAS,GAAGJ,MAAM,CAAC,KAAD,CAAxB;;AAEA,iBAAeK,aAAf,GAA8B;AAC1B,QAAG;AACC,YAAMC,IAAI,GAAG,MAAMC,KAAK,CAAC,uFAAD,CAAxB;AACA,YAAMC,IAAI,GAAG,MAAMF,IAAI,CAACE,IAAL,EAAnB;AACAL,MAAAA,aAAa,CAACK,IAAI,CAACC,OAAN,CAAb;AACH,KAJD,CAKA,OAAMC,GAAN,EAAU;AACNC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AAEJ;;AAEDX,EAAAA,SAAS,CAAC,MAAI;AACVM,IAAAA,aAAa;AAChB,GAFQ,EAEP,EAFO,CAAT;AAIAN,EAAAA,SAAS,CAAC,MAAI;AACV,QAAGK,SAAS,CAACS,OAAb,EAAqB;AACjBF,MAAAA,OAAO,CAACC,GAAR,CAAYV,UAAZ;AACH,KAFD,MAGI;AACAE,MAAAA,SAAS,CAACS,OAAV,GAAoB,IAApB;AACH;AACJ,GAPQ,EAOP,CAACX,UAAD,CAPO,CAAT;;AASA,MAAGE,SAAS,CAACS,OAAb,EAAqB;AACjBX,IAAAA,UAAU,CAACY,GAAX,CAAgBC,MAAM,IAAI;AACtB;AACA;AACA;AACA;AACA;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,MAAZ;AACC,KAPL;AAUH,GAzCgC,CA0CjC;AACA;AACA;AACA;AACA;;;AACA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH;;GAlDuBd,U;;KAAAA,U","sourcesContent":["import React, {useState,useEffect, useRef} from 'react'\r\n\r\nexport default function AllRecipes() {\r\n\r\n    const [recipeData, setRecipeData] = useState([])\r\n    const isMounted = useRef(false)\r\n\r\n    async function getAllRecipes(){\r\n        try{\r\n            const data = await fetch('https://beta.eagleowl.in/api/v1/mock/organization/18/outlet/18/recipe/recipes/?page=1')\r\n            const json = await data.json()\r\n            setRecipeData(json.results)\r\n        }\r\n        catch(err){\r\n            console.log(err)\r\n        }\r\n        \r\n    }\r\n    \r\n    useEffect(()=>{\r\n        getAllRecipes()\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        if(isMounted.current){\r\n            console.log(recipeData)\r\n        }\r\n        else{\r\n            isMounted.current = true\r\n        }\r\n    },[recipeData])\r\n    \r\n    if(isMounted.current){\r\n        recipeData.map( recipe => {\r\n            // return(\r\n            //     <div key={recipe.id}>\r\n            //         <p>{recipe.name}</p>\r\n            //     </div>\r\n            //     )\r\n            console.log(recipe)    \r\n            }\r\n           \r\n        )\r\n    }\r\n    // else{\r\n    //     return(\r\n    //         <div>loading</div>\r\n    //     )\r\n    // }\r\n    return(\r\n        <div>loading</div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}