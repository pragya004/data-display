{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pk\\\\Desktop\\\\interview_practice\\\\eagleowl\\\\src\\\\Components\\\\IsIncorrect.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function IsIncorrect() {\n  _s();\n\n  const [isIncorrectData, setIsIncorrectData] = useState([]);\n  const isMounted = useRef(false);\n\n  async function getIsIncorrectRecipes() {\n    try {\n      const data = await fetch('https://beta.eagleowl.in/api/v1/mock/organization/18/outlet/18/recipe/recipes/?page=1');\n      const json = await data.json();\n      setIsIncorrectData(json.results);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  useEffect(() => {\n    getIsIncorrectRecipes();\n  }, []);\n  useEffect(() => {\n    if (isMounted.current) {\n      console.log(isIncorrectData);\n\n      if (isIncorrectData !== null) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"not null\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"this shit is null\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this);\n      }\n    } else {\n      isMounted.current = true;\n    }\n  }, [isIncorrectData]);\n}\n\n_s(IsIncorrect, \"AaTz2d14A6+1F+1GnN/v4loiqBU=\");\n\n_c = IsIncorrect;\n\nvar _c;\n\n$RefreshReg$(_c, \"IsIncorrect\");","map":{"version":3,"sources":["C:/Users/pk/Desktop/interview_practice/eagleowl/src/Components/IsIncorrect.js"],"names":["React","useState","useEffect","useRef","IsIncorrect","isIncorrectData","setIsIncorrectData","isMounted","getIsIncorrectRecipes","data","fetch","json","results","err","console","log","current"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,MAApC,QAAiD,OAAjD;;AAEA,eAAe,SAASC,WAAT,GAAuB;AAAA;;AAElC,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCL,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAMM,SAAS,GAAGJ,MAAM,CAAC,KAAD,CAAxB;;AAGA,iBAAeK,qBAAf,GAAsC;AAClC,QAAG;AACC,YAAMC,IAAI,GAAG,MAAMC,KAAK,CAAC,uFAAD,CAAxB;AACA,YAAMC,IAAI,GAAG,MAAMF,IAAI,CAACE,IAAL,EAAnB;AACAL,MAAAA,kBAAkB,CAACK,IAAI,CAACC,OAAN,CAAlB;AACH,KAJD,CAKA,OAAMC,GAAN,EAAU;AACNC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AAEJ;;AAEDX,EAAAA,SAAS,CAAC,MAAI;AACVM,IAAAA,qBAAqB;AACxB,GAFQ,EAEP,EAFO,CAAT;AAIAN,EAAAA,SAAS,CAAC,MAAI;AACV,QAAGK,SAAS,CAACS,OAAb,EAAqB;AACjBF,MAAAA,OAAO,CAACC,GAAR,CAAYV,eAAZ;;AACA,UAAGA,eAAe,KAAK,IAAvB,EAA4B;AACxB,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ;AAGH,OAJD,MAKI;AACA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ;AAGH;AACJ,KAZD,MAaI;AACAE,MAAAA,SAAS,CAACS,OAAV,GAAoB,IAApB;AACH;AACJ,GAjBQ,EAiBP,CAACX,eAAD,CAjBO,CAAT;AAkBH;;GAxCuBD,W;;KAAAA,W","sourcesContent":["import React, {useState, useEffect, useRef} from 'react'\r\n\r\nexport default function IsIncorrect() {\r\n\r\n    const [isIncorrectData, setIsIncorrectData] = useState([])\r\n    const isMounted = useRef(false)\r\n\r\n\r\n    async function getIsIncorrectRecipes(){\r\n        try{\r\n            const data = await fetch('https://beta.eagleowl.in/api/v1/mock/organization/18/outlet/18/recipe/recipes/?page=1')\r\n            const json = await data.json()\r\n            setIsIncorrectData(json.results)\r\n        }\r\n        catch(err){\r\n            console.log(err)\r\n        }\r\n        \r\n    }\r\n    \r\n    useEffect(()=>{\r\n        getIsIncorrectRecipes()\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        if(isMounted.current){\r\n            console.log(isIncorrectData)\r\n            if(isIncorrectData !== null){\r\n                return(\r\n                    <div>not null</div>\r\n                )\r\n            }\r\n            else{\r\n                return(\r\n                    <div>this shit is null</div>\r\n                )\r\n            }\r\n        }\r\n        else{\r\n            isMounted.current = true\r\n        }\r\n    },[isIncorrectData])\r\n}\r\n"]},"metadata":{},"sourceType":"module"}